ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.delay1ms,"ax",%progbits
  16              		.align	1
  17              		.global	delay1ms
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	delay1ms:
  25              	.LFB65:
  26              		.file 1 "Src/main.c"
   1:Src/main.c    **** //https://laptrinharmst.blogspot.com/2018/03/bai-09-adc-trong-stm32f103.html
   2:Src/main.c    **** //https://www.youtube.com/watch?v=T0E3_9u4ds4
   3:Src/main.c    **** //https://stackoverflow.com/questions/59546305/stm32f103-gpio-ports
   4:Src/main.c    **** //-------UART 2
   5:Src/main.c    **** //PA2 = tx
   6:Src/main.c    **** //PA3 = rx
   7:Src/main.c    **** //-------ADC
   8:Src/main.c    **** // kenh 0 = PA0
   9:Src/main.c    **** #include "stm32f10x.h"
  10:Src/main.c    **** #include <string.h>
  11:Src/main.c    **** void delay1ms(void);
  12:Src/main.c    **** void delayms(uint32_t u32delayms);
  13:Src/main.c    **** void delayus(uint32_t u32delayus);
  14:Src/main.c    **** void delay1ms(void){
  27              		.loc 1 14 20
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  15:Src/main.c    ****     TIM_SetCounter(TIM2, 0);
  39              		.loc 1 15 5
  40 0004 0021     		movs	r1, #0
  41 0006 4FF08040 		mov	r0, #1073741824
  42 000a FFF7FEFF 		bl	TIM_SetCounter
  16:Src/main.c    ****     while(TIM_GetCounter(TIM2) < 1000){
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 2


  43              		.loc 1 16 10
  44 000e 00BF     		nop
  45              	.L2:
  46              		.loc 1 16 11 discriminator 1
  47 0010 4FF08040 		mov	r0, #1073741824
  48 0014 FFF7FEFF 		bl	TIM_GetCounter
  49 0018 0346     		mov	r3, r0
  50              		.loc 1 16 10 discriminator 1
  51 001a B3F57A7F 		cmp	r3, #1000
  52 001e F7D3     		bcc	.L2
  17:Src/main.c    **** 
  18:Src/main.c    ****     }
  19:Src/main.c    **** }
  53              		.loc 1 19 1
  54 0020 00BF     		nop
  55 0022 00BF     		nop
  56 0024 80BD     		pop	{r7, pc}
  57              		.cfi_endproc
  58              	.LFE65:
  60              		.section	.text.delayus,"ax",%progbits
  61              		.align	1
  62              		.global	delayus
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  66              		.fpu softvfp
  68              	delayus:
  69              	.LFB66:
  20:Src/main.c    **** void delayus(uint32_t u32delayus){
  70              		.loc 1 20 34
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 8
  73              		@ frame_needed = 1, uses_anonymous_args = 0
  74 0000 80B5     		push	{r7, lr}
  75              	.LCFI2:
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 82B0     		sub	sp, sp, #8
  80              	.LCFI3:
  81              		.cfi_def_cfa_offset 16
  82 0004 00AF     		add	r7, sp, #0
  83              	.LCFI4:
  84              		.cfi_def_cfa_register 7
  85 0006 7860     		str	r0, [r7, #4]
  21:Src/main.c    ****     TIM_SetCounter(TIM2, 0);
  86              		.loc 1 21 5
  87 0008 0021     		movs	r1, #0
  88 000a 4FF08040 		mov	r0, #1073741824
  89 000e FFF7FEFF 		bl	TIM_SetCounter
  22:Src/main.c    ****     while(TIM_GetCounter(TIM2) < u32delayus){
  90              		.loc 1 22 10
  91 0012 00BF     		nop
  92              	.L4:
  93              		.loc 1 22 11 discriminator 1
  94 0014 4FF08040 		mov	r0, #1073741824
  95 0018 FFF7FEFF 		bl	TIM_GetCounter
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 3


  96 001c 0346     		mov	r3, r0
  97 001e 1A46     		mov	r2, r3
  98              		.loc 1 22 10 discriminator 1
  99 0020 7B68     		ldr	r3, [r7, #4]
 100 0022 9342     		cmp	r3, r2
 101 0024 F6D8     		bhi	.L4
  23:Src/main.c    **** 
  24:Src/main.c    ****     }
  25:Src/main.c    **** }
 102              		.loc 1 25 1
 103 0026 00BF     		nop
 104 0028 00BF     		nop
 105 002a 0837     		adds	r7, r7, #8
 106              	.LCFI5:
 107              		.cfi_def_cfa_offset 8
 108 002c BD46     		mov	sp, r7
 109              	.LCFI6:
 110              		.cfi_def_cfa_register 13
 111              		@ sp needed
 112 002e 80BD     		pop	{r7, pc}
 113              		.cfi_endproc
 114              	.LFE66:
 116              		.section	.text.delayms,"ax",%progbits
 117              		.align	1
 118              		.global	delayms
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 122              		.fpu softvfp
 124              	delayms:
 125              	.LFB67:
  26:Src/main.c    **** void delayms(uint32_t u32delayms){
 126              		.loc 1 26 34
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 8
 129              		@ frame_needed = 1, uses_anonymous_args = 0
 130 0000 80B5     		push	{r7, lr}
 131              	.LCFI7:
 132              		.cfi_def_cfa_offset 8
 133              		.cfi_offset 7, -8
 134              		.cfi_offset 14, -4
 135 0002 82B0     		sub	sp, sp, #8
 136              	.LCFI8:
 137              		.cfi_def_cfa_offset 16
 138 0004 00AF     		add	r7, sp, #0
 139              	.LCFI9:
 140              		.cfi_def_cfa_register 7
 141 0006 7860     		str	r0, [r7, #4]
  27:Src/main.c    ****     while(u32delayms){
 142              		.loc 1 27 10
 143 0008 04E0     		b	.L6
 144              	.L7:
  28:Src/main.c    ****         delay1ms();
 145              		.loc 1 28 9
 146 000a FFF7FEFF 		bl	delay1ms
  29:Src/main.c    ****         --u32delayms;
 147              		.loc 1 29 9
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 4


 148 000e 7B68     		ldr	r3, [r7, #4]
 149 0010 013B     		subs	r3, r3, #1
 150 0012 7B60     		str	r3, [r7, #4]
 151              	.L6:
  27:Src/main.c    ****     while(u32delayms){
 152              		.loc 1 27 10
 153 0014 7B68     		ldr	r3, [r7, #4]
 154 0016 002B     		cmp	r3, #0
 155 0018 F7D1     		bne	.L7
  30:Src/main.c    ****     }
  31:Src/main.c    **** }
 156              		.loc 1 31 1
 157 001a 00BF     		nop
 158 001c 00BF     		nop
 159 001e 0837     		adds	r7, r7, #8
 160              	.LCFI10:
 161              		.cfi_def_cfa_offset 8
 162 0020 BD46     		mov	sp, r7
 163              	.LCFI11:
 164              		.cfi_def_cfa_register 13
 165              		@ sp needed
 166 0022 80BD     		pop	{r7, pc}
 167              		.cfi_endproc
 168              	.LFE67:
 170              		.section	.text.UART_Write,"ax",%progbits
 171              		.align	1
 172              		.global	UART_Write
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu softvfp
 178              	UART_Write:
 179              	.LFB68:
  32:Src/main.c    **** 
  33:Src/main.c    **** void UART_Write(char data){
 180              		.loc 1 33 27
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 8
 183              		@ frame_needed = 1, uses_anonymous_args = 0
 184 0000 80B5     		push	{r7, lr}
 185              	.LCFI12:
 186              		.cfi_def_cfa_offset 8
 187              		.cfi_offset 7, -8
 188              		.cfi_offset 14, -4
 189 0002 82B0     		sub	sp, sp, #8
 190              	.LCFI13:
 191              		.cfi_def_cfa_offset 16
 192 0004 00AF     		add	r7, sp, #0
 193              	.LCFI14:
 194              		.cfi_def_cfa_register 7
 195 0006 0346     		mov	r3, r0
 196 0008 FB71     		strb	r3, [r7, #7]
  34:Src/main.c    ****     USART_SendData(USART2, data);           // gui du lieu
 197              		.loc 1 34 5
 198 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 199 000c 9BB2     		uxth	r3, r3
 200 000e 1946     		mov	r1, r3
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 5


 201 0010 0748     		ldr	r0, .L10
 202 0012 FFF7FEFF 		bl	USART_SendData
  35:Src/main.c    ****     while(USART_GetFlagStatus(USART2, USART_FLAG_TXE) == RESET){        //neu ko gui dc du lieu thi
 203              		.loc 1 35 10
 204 0016 00BF     		nop
 205              	.L9:
 206              		.loc 1 35 11 discriminator 1
 207 0018 8021     		movs	r1, #128
 208 001a 0548     		ldr	r0, .L10
 209 001c FFF7FEFF 		bl	USART_GetFlagStatus
 210 0020 0346     		mov	r3, r0
 211              		.loc 1 35 10 discriminator 1
 212 0022 002B     		cmp	r3, #0
 213 0024 F8D0     		beq	.L9
  36:Src/main.c    **** 
  37:Src/main.c    ****     }
  38:Src/main.c    **** }
 214              		.loc 1 38 1
 215 0026 00BF     		nop
 216 0028 00BF     		nop
 217 002a 0837     		adds	r7, r7, #8
 218              	.LCFI15:
 219              		.cfi_def_cfa_offset 8
 220 002c BD46     		mov	sp, r7
 221              	.LCFI16:
 222              		.cfi_def_cfa_register 13
 223              		@ sp needed
 224 002e 80BD     		pop	{r7, pc}
 225              	.L11:
 226              		.align	2
 227              	.L10:
 228 0030 00440040 		.word	1073759232
 229              		.cfi_endproc
 230              	.LFE68:
 232              		.section	.text.UART_Write_Text,"ax",%progbits
 233              		.align	1
 234              		.global	UART_Write_Text
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu softvfp
 240              	UART_Write_Text:
 241              	.LFB69:
  39:Src/main.c    **** void UART_Write_Text( char *text){
 242              		.loc 1 39 34
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 16
 245              		@ frame_needed = 1, uses_anonymous_args = 0
 246 0000 80B5     		push	{r7, lr}
 247              	.LCFI17:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 84B0     		sub	sp, sp, #16
 252              	.LCFI18:
 253              		.cfi_def_cfa_offset 24
 254 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 6


 255              	.LCFI19:
 256              		.cfi_def_cfa_register 7
 257 0006 7860     		str	r0, [r7, #4]
  40:Src/main.c    ****     int i;
  41:Src/main.c    ****     for(i=0;text[i]!='\0';i++)
 258              		.loc 1 41 10
 259 0008 0023     		movs	r3, #0
 260 000a FB60     		str	r3, [r7, #12]
 261              		.loc 1 41 5
 262 000c 09E0     		b	.L13
 263              	.L14:
  42:Src/main.c    ****         UART_Write(text[i]);
 264              		.loc 1 42 24 discriminator 3
 265 000e FB68     		ldr	r3, [r7, #12]
 266 0010 7A68     		ldr	r2, [r7, #4]
 267 0012 1344     		add	r3, r3, r2
 268              		.loc 1 42 9 discriminator 3
 269 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 0016 1846     		mov	r0, r3
 271 0018 FFF7FEFF 		bl	UART_Write
  41:Src/main.c    ****         UART_Write(text[i]);
 272              		.loc 1 41 28 discriminator 3
 273 001c FB68     		ldr	r3, [r7, #12]
 274 001e 0133     		adds	r3, r3, #1
 275 0020 FB60     		str	r3, [r7, #12]
 276              	.L13:
  41:Src/main.c    ****         UART_Write(text[i]);
 277              		.loc 1 41 17 discriminator 1
 278 0022 FB68     		ldr	r3, [r7, #12]
 279 0024 7A68     		ldr	r2, [r7, #4]
 280 0026 1344     		add	r3, r3, r2
 281 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  41:Src/main.c    ****         UART_Write(text[i]);
 282              		.loc 1 41 5 discriminator 1
 283 002a 002B     		cmp	r3, #0
 284 002c EFD1     		bne	.L14
  43:Src/main.c    **** }
 285              		.loc 1 43 1
 286 002e 00BF     		nop
 287 0030 00BF     		nop
 288 0032 1037     		adds	r7, r7, #16
 289              	.LCFI20:
 290              		.cfi_def_cfa_offset 8
 291 0034 BD46     		mov	sp, r7
 292              	.LCFI21:
 293              		.cfi_def_cfa_register 13
 294              		@ sp needed
 295 0036 80BD     		pop	{r7, pc}
 296              		.cfi_endproc
 297              	.LFE69:
 299              		.section	.rodata
 300              		.align	2
 301              	.LC0:
 302 0000 41542B43 		.ascii	"AT+CMGS=\"+84334610035\"\015\012\000"
 302      4D47533D 
 302      222B3834 
 302      33333436 
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 7


 302      31303033 
 303 0019 000000   		.align	2
 304              	.LC1:
 305 001c 0A0D00   		.ascii	"\012\015\000"
 306              		.section	.text.send_sms,"ax",%progbits
 307              		.align	1
 308              		.global	send_sms
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 312              		.fpu softvfp
 314              	send_sms:
 315              	.LFB70:
  44:Src/main.c    **** void send_sms(char *n){
 316              		.loc 1 44 23
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 8
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320 0000 80B5     		push	{r7, lr}
 321              	.LCFI22:
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 82B0     		sub	sp, sp, #8
 326              	.LCFI23:
 327              		.cfi_def_cfa_offset 16
 328 0004 00AF     		add	r7, sp, #0
 329              	.LCFI24:
 330              		.cfi_def_cfa_register 7
 331 0006 7860     		str	r0, [r7, #4]
  45:Src/main.c    ****     UART_Write_Text("AT+CMGS=\"+84334610035\"\r\n");
 332              		.loc 1 45 5
 333 0008 1248     		ldr	r0, .L17
 334 000a FFF7FEFF 		bl	UART_Write_Text
  46:Src/main.c    ****     delayms(500);
 335              		.loc 1 46 5
 336 000e 4FF4FA70 		mov	r0, #500
 337 0012 FFF7FEFF 		bl	delayms
  47:Src/main.c    ****     UART_Write_Text(n);
 338              		.loc 1 47 5
 339 0016 7868     		ldr	r0, [r7, #4]
 340 0018 FFF7FEFF 		bl	UART_Write_Text
  48:Src/main.c    ****     UART_Write_Text("\n\r");
 341              		.loc 1 48 5
 342 001c 0E48     		ldr	r0, .L17+4
 343 001e FFF7FEFF 		bl	UART_Write_Text
  49:Src/main.c    ****     delayms(500);
 344              		.loc 1 49 5
 345 0022 4FF4FA70 		mov	r0, #500
 346 0026 FFF7FEFF 		bl	delayms
  50:Src/main.c    ****     USART_SendData(USART2, 0x1A);           // gui du lieu
 347              		.loc 1 50 5
 348 002a 1A21     		movs	r1, #26
 349 002c 0B48     		ldr	r0, .L17+8
 350 002e FFF7FEFF 		bl	USART_SendData
  51:Src/main.c    ****     while(USART_GetFlagStatus(USART2, USART_FLAG_TXE) == RESET){        //neu ko gui dc du lieu thi
 351              		.loc 1 51 10
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 8


 352 0032 00BF     		nop
 353              	.L16:
 354              		.loc 1 51 11 discriminator 1
 355 0034 8021     		movs	r1, #128
 356 0036 0948     		ldr	r0, .L17+8
 357 0038 FFF7FEFF 		bl	USART_GetFlagStatus
 358 003c 0346     		mov	r3, r0
 359              		.loc 1 51 10 discriminator 1
 360 003e 002B     		cmp	r3, #0
 361 0040 F8D0     		beq	.L16
  52:Src/main.c    **** 
  53:Src/main.c    ****     }
  54:Src/main.c    ****     delayms(1000);
 362              		.loc 1 54 5
 363 0042 4FF47A70 		mov	r0, #1000
 364 0046 FFF7FEFF 		bl	delayms
  55:Src/main.c    **** }
 365              		.loc 1 55 1
 366 004a 00BF     		nop
 367 004c 0837     		adds	r7, r7, #8
 368              	.LCFI25:
 369              		.cfi_def_cfa_offset 8
 370 004e BD46     		mov	sp, r7
 371              	.LCFI26:
 372              		.cfi_def_cfa_register 13
 373              		@ sp needed
 374 0050 80BD     		pop	{r7, pc}
 375              	.L18:
 376 0052 00BF     		.align	2
 377              	.L17:
 378 0054 00000000 		.word	.LC0
 379 0058 1C000000 		.word	.LC1
 380 005c 00440040 		.word	1073759232
 381              		.cfi_endproc
 382              	.LFE70:
 384              		.section	.rodata
 385 001f 00       		.align	2
 386              	.LC2:
 387 0020 41540D0A 		.ascii	"AT\015\012\000"
 387      00
 388 0025 000000   		.align	2
 389              	.LC3:
 390 0028 41544530 		.ascii	"ATE0\015\012\000"
 390      0D0A00
 391 002f 00       		.align	2
 392              	.LC4:
 393 0030 41542657 		.ascii	"AT&W\015\012\000"
 393      0D0A00
 394 0037 00       		.align	2
 395              	.LC5:
 396 0038 41542B43 		.ascii	"AT+CSCS=\"GSM\"\015\012\000"
 396      5343533D 
 396      2247534D 
 396      220D0A00 
 397              		.align	2
 398              	.LC6:
 399 0048 41542B43 		.ascii	"AT+CMGF=1\015\012\000"
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 9


 399      4D47463D 
 399      310D0A00 
 400              		.align	2
 401              	.LC7:
 402 0054 41542B43 		.ascii	"AT+CNMI=1,2,0,0,0\015\012\000"
 402      4E4D493D 
 402      312C322C 
 402      302C302C 
 402      300D0A00 
 403              		.align	2
 404              	.LC8:
 405 0068 41542B43 		.ascii	"AT+CSAS\015\012\000"
 405      5341530D 
 405      0A00
 406 0072 0000     		.align	2
 407              	.LC9:
 408 0074 4B686F69 		.ascii	"Khoi dong xong roi!!\000"
 408      20646F6E 
 408      6720786F 
 408      6E672072 
 408      6F692121 
 409              		.section	.text.ATinit,"ax",%progbits
 410              		.align	1
 411              		.global	ATinit
 412              		.syntax unified
 413              		.thumb
 414              		.thumb_func
 415              		.fpu softvfp
 417              	ATinit:
 418              	.LFB71:
  56:Src/main.c    **** void ATinit(){
 419              		.loc 1 56 14
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              	.LCFI27:
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 00AF     		add	r7, sp, #0
 429              	.LCFI28:
 430              		.cfi_def_cfa_register 7
  57:Src/main.c    ****     UART_Write_Text("AT\r\n");          //ACK command
 431              		.loc 1 57 5
 432 0004 1C48     		ldr	r0, .L20
 433 0006 FFF7FEFF 		bl	UART_Write_Text
  58:Src/main.c    ****     delayms(500);
 434              		.loc 1 58 5
 435 000a 4FF4FA70 		mov	r0, #500
 436 000e FFF7FEFF 		bl	delayms
  59:Src/main.c    ****     UART_Write_Text("ATE0\r\n");        //disable echo   
 437              		.loc 1 59 5
 438 0012 1A48     		ldr	r0, .L20+4
 439 0014 FFF7FEFF 		bl	UART_Write_Text
  60:Src/main.c    ****     delayms(500);
 440              		.loc 1 60 5
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 10


 441 0018 4FF4FA70 		mov	r0, #500
 442 001c FFF7FEFF 		bl	delayms
  61:Src/main.c    ****     UART_Write_Text("AT&W\r\n");        // save this command
 443              		.loc 1 61 5
 444 0020 1748     		ldr	r0, .L20+8
 445 0022 FFF7FEFF 		bl	UART_Write_Text
  62:Src/main.c    ****     delayms(500);
 446              		.loc 1 62 5
 447 0026 4FF4FA70 		mov	r0, #500
 448 002a FFF7FEFF 		bl	delayms
  63:Src/main.c    ****     UART_Write_Text("AT+CSCS=\"GSM\"\r\n");
 449              		.loc 1 63 5
 450 002e 1548     		ldr	r0, .L20+12
 451 0030 FFF7FEFF 		bl	UART_Write_Text
  64:Src/main.c    ****     delayms(500);
 452              		.loc 1 64 5
 453 0034 4FF4FA70 		mov	r0, #500
 454 0038 FFF7FEFF 		bl	delayms
  65:Src/main.c    ****     UART_Write_Text("AT+CMGF=1\r\n");   //format text
 455              		.loc 1 65 5
 456 003c 1248     		ldr	r0, .L20+16
 457 003e FFF7FEFF 		bl	UART_Write_Text
  66:Src/main.c    ****     delayms(500);
 458              		.loc 1 66 5
 459 0042 4FF4FA70 		mov	r0, #500
 460 0046 FFF7FEFF 		bl	delayms
  67:Src/main.c    ****     UART_Write_Text("AT+CNMI=1,2,0,0,0\r\n");
 461              		.loc 1 67 5
 462 004a 1048     		ldr	r0, .L20+20
 463 004c FFF7FEFF 		bl	UART_Write_Text
  68:Src/main.c    ****     delayms(500);
 464              		.loc 1 68 5
 465 0050 4FF4FA70 		mov	r0, #500
 466 0054 FFF7FEFF 		bl	delayms
  69:Src/main.c    ****     UART_Write_Text("AT+CSAS\r\n");
 467              		.loc 1 69 5
 468 0058 0D48     		ldr	r0, .L20+24
 469 005a FFF7FEFF 		bl	UART_Write_Text
  70:Src/main.c    ****     delayms(500);  
 470              		.loc 1 70 5
 471 005e 4FF4FA70 		mov	r0, #500
 472 0062 FFF7FEFF 		bl	delayms
  71:Src/main.c    ****     send_sms("Khoi dong xong roi!!");   
 473              		.loc 1 71 5
 474 0066 0B48     		ldr	r0, .L20+28
 475 0068 FFF7FEFF 		bl	send_sms
  72:Src/main.c    ****     delayms(500);
 476              		.loc 1 72 5
 477 006c 4FF4FA70 		mov	r0, #500
 478 0070 FFF7FEFF 		bl	delayms
  73:Src/main.c    **** }
 479              		.loc 1 73 1
 480 0074 00BF     		nop
 481 0076 80BD     		pop	{r7, pc}
 482              	.L21:
 483              		.align	2
 484              	.L20:
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 11


 485 0078 20000000 		.word	.LC2
 486 007c 28000000 		.word	.LC3
 487 0080 30000000 		.word	.LC4
 488 0084 38000000 		.word	.LC5
 489 0088 48000000 		.word	.LC6
 490 008c 54000000 		.word	.LC7
 491 0090 68000000 		.word	.LC8
 492 0094 74000000 		.word	.LC9
 493              		.cfi_endproc
 494              	.LFE71:
 496              		.comm	ptr,4,4
 497              		.comm	i,1,1
 498              		.comm	rev,1,1
 499              		.comm	rev1,1,1
 500              		.comm	rev2,1,1
 501              		.comm	rev3,1,1
 502              		.comm	rev4,1,1
 503              		.comm	buffer,90,4
 504              		.comm	xbuffer,1,1
 505              		.comm	new_sms,4,4
 506              		.section	.text.USART2_IRQHandler,"ax",%progbits
 507              		.align	1
 508              		.global	USART2_IRQHandler
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu softvfp
 514              	USART2_IRQHandler:
 515              	.LFB72:
  74:Src/main.c    **** unsigned char *ptr, i, rev, rev1, rev2, rev3, rev4, buffer[90], xbuffer;
  75:Src/main.c    **** unsigned int new_sms;
  76:Src/main.c    **** 
  77:Src/main.c    **** void USART2_IRQHandler(void){           //neu interrupt ko chay thi check lai muc logic
 516              		.loc 1 77 29
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520 0000 80B5     		push	{r7, lr}
 521              	.LCFI29:
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 7, -8
 524              		.cfi_offset 14, -4
 525 0002 00AF     		add	r7, sp, #0
 526              	.LCFI30:
 527              		.cfi_def_cfa_register 7
  78:Src/main.c    ****     if(USART_GetITStatus(USART2, USART_IT_RXNE)){    //flag is set
 528              		.loc 1 78 8
 529 0004 40F22551 		movw	r1, #1317
 530 0008 2948     		ldr	r0, .L30
 531 000a FFF7FEFF 		bl	USART_GetITStatus
 532 000e 0346     		mov	r3, r0
 533              		.loc 1 78 7
 534 0010 002B     		cmp	r3, #0
 535 0012 4AD0     		beq	.L29
  79:Src/main.c    ****         
  80:Src/main.c    ****         rev  = USART2->DR;       // thanh ghi DR chua data 
 536              		.loc 1 80 22
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 12


 537 0014 264B     		ldr	r3, .L30
 538 0016 9B88     		ldrh	r3, [r3, #4]	@ movhi
 539 0018 9BB2     		uxth	r3, r3
 540              		.loc 1 80 14
 541 001a DAB2     		uxtb	r2, r3
 542 001c 254B     		ldr	r3, .L30+4
 543 001e 1A70     		strb	r2, [r3]
  81:Src/main.c    ****         buffer[xbuffer++] = rev;
 544              		.loc 1 81 23
 545 0020 254B     		ldr	r3, .L30+8
 546 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 547 0024 5A1C     		adds	r2, r3, #1
 548 0026 D1B2     		uxtb	r1, r2
 549 0028 234A     		ldr	r2, .L30+8
 550 002a 1170     		strb	r1, [r2]
 551 002c 1A46     		mov	r2, r3
 552              		.loc 1 81 27
 553 002e 214B     		ldr	r3, .L30+4
 554 0030 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 555 0032 224B     		ldr	r3, .L30+12
 556 0034 9954     		strb	r1, [r3, r2]
  82:Src/main.c    ****         if(xbuffer>90) xbuffer = 0;
 557              		.loc 1 82 19
 558 0036 204B     		ldr	r3, .L30+8
 559 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 560              		.loc 1 82 11
 561 003a 5A2B     		cmp	r3, #90
 562 003c 02D9     		bls	.L24
 563              		.loc 1 82 32 discriminator 1
 564 003e 1E4B     		ldr	r3, .L30+8
 565 0040 0022     		movs	r2, #0
 566 0042 1A70     		strb	r2, [r3]
 567              	.L24:
  83:Src/main.c    ****         if(rev == '+') rev1 = rev;           
 568              		.loc 1 83 16
 569 0044 1B4B     		ldr	r3, .L30+4
 570 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 571              		.loc 1 83 11
 572 0048 2B2B     		cmp	r3, #43
 573 004a 03D1     		bne	.L25
 574              		.loc 1 83 29 discriminator 1
 575 004c 194B     		ldr	r3, .L30+4
 576 004e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 577 0050 1B4B     		ldr	r3, .L30+16
 578 0052 1A70     		strb	r2, [r3]
 579              	.L25:
  84:Src/main.c    ****         if(rev == 'C') rev2 = rev;
 580              		.loc 1 84 16
 581 0054 174B     		ldr	r3, .L30+4
 582 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 583              		.loc 1 84 11
 584 0058 432B     		cmp	r3, #67
 585 005a 03D1     		bne	.L26
 586              		.loc 1 84 29 discriminator 1
 587 005c 154B     		ldr	r3, .L30+4
 588 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 589 0060 184B     		ldr	r3, .L30+20
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 13


 590 0062 1A70     		strb	r2, [r3]
 591              	.L26:
  85:Src/main.c    ****         if(rev == 'M') rev3 = rev;
 592              		.loc 1 85 16
 593 0064 134B     		ldr	r3, .L30+4
 594 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 595              		.loc 1 85 11
 596 0068 4D2B     		cmp	r3, #77
 597 006a 03D1     		bne	.L27
 598              		.loc 1 85 29 discriminator 1
 599 006c 114B     		ldr	r3, .L30+4
 600 006e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 601 0070 154B     		ldr	r3, .L30+24
 602 0072 1A70     		strb	r2, [r3]
 603              	.L27:
  86:Src/main.c    ****         if(rev == 'T') rev4 = rev;
 604              		.loc 1 86 16
 605 0074 0F4B     		ldr	r3, .L30+4
 606 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 607              		.loc 1 86 11
 608 0078 542B     		cmp	r3, #84
 609 007a 03D1     		bne	.L28
 610              		.loc 1 86 29 discriminator 1
 611 007c 0D4B     		ldr	r3, .L30+4
 612 007e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 613 0080 124B     		ldr	r3, .L30+28
 614 0082 1A70     		strb	r2, [r3]
 615              	.L28:
  87:Src/main.c    ****         if(rev1 == '+' && rev2 == 'C' && rev3 == 'M' && rev4 =='T') new_sms = 1;       
 616              		.loc 1 87 17
 617 0084 0E4B     		ldr	r3, .L30+16
 618 0086 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 619              		.loc 1 87 11
 620 0088 2B2B     		cmp	r3, #43
 621 008a 0ED1     		bne	.L29
 622              		.loc 1 87 32 discriminator 1
 623 008c 0D4B     		ldr	r3, .L30+20
 624 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625              		.loc 1 87 24 discriminator 1
 626 0090 432B     		cmp	r3, #67
 627 0092 0AD1     		bne	.L29
 628              		.loc 1 87 47 discriminator 2
 629 0094 0C4B     		ldr	r3, .L30+24
 630 0096 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 631              		.loc 1 87 39 discriminator 2
 632 0098 4D2B     		cmp	r3, #77
 633 009a 06D1     		bne	.L29
 634              		.loc 1 87 62 discriminator 3
 635 009c 0B4B     		ldr	r3, .L30+28
 636 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 637              		.loc 1 87 54 discriminator 3
 638 00a0 542B     		cmp	r3, #84
 639 00a2 02D1     		bne	.L29
 640              		.loc 1 87 77 discriminator 4
 641 00a4 0A4B     		ldr	r3, .L30+32
 642 00a6 0122     		movs	r2, #1
 643 00a8 1A60     		str	r2, [r3]
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 14


 644              	.L29:
  88:Src/main.c    ****     }      
  89:Src/main.c    **** }
 645              		.loc 1 89 1
 646 00aa 00BF     		nop
 647 00ac 80BD     		pop	{r7, pc}
 648              	.L31:
 649 00ae 00BF     		.align	2
 650              	.L30:
 651 00b0 00440040 		.word	1073759232
 652 00b4 00000000 		.word	rev
 653 00b8 00000000 		.word	xbuffer
 654 00bc 00000000 		.word	buffer
 655 00c0 00000000 		.word	rev1
 656 00c4 00000000 		.word	rev2
 657 00c8 00000000 		.word	rev3
 658 00cc 00000000 		.word	rev4
 659 00d0 00000000 		.word	new_sms
 660              		.cfi_endproc
 661              	.LFE72:
 663              		.section	.text.clear_buffer,"ax",%progbits
 664              		.align	1
 665              		.global	clear_buffer
 666              		.syntax unified
 667              		.thumb
 668              		.thumb_func
 669              		.fpu softvfp
 671              	clear_buffer:
 672              	.LFB73:
  90:Src/main.c    **** void clear_buffer(){
 673              		.loc 1 90 20
 674              		.cfi_startproc
 675              		@ args = 0, pretend = 0, frame = 0
 676              		@ frame_needed = 1, uses_anonymous_args = 0
 677              		@ link register save eliminated.
 678 0000 80B4     		push	{r7}
 679              	.LCFI31:
 680              		.cfi_def_cfa_offset 4
 681              		.cfi_offset 7, -4
 682 0002 00AF     		add	r7, sp, #0
 683              	.LCFI32:
 684              		.cfi_def_cfa_register 7
  91:Src/main.c    ****     for(i =0; i<90; i++)    buffer[i] = ' ';
 685              		.loc 1 91 11
 686 0004 0C4B     		ldr	r3, .L35
 687 0006 0022     		movs	r2, #0
 688 0008 1A70     		strb	r2, [r3]
 689              		.loc 1 91 5
 690 000a 0BE0     		b	.L33
 691              	.L34:
 692              		.loc 1 91 35 discriminator 3
 693 000c 0A4B     		ldr	r3, .L35
 694 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 695 0010 1A46     		mov	r2, r3
 696              		.loc 1 91 39 discriminator 3
 697 0012 0A4B     		ldr	r3, .L35+4
 698 0014 2021     		movs	r1, #32
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 15


 699 0016 9954     		strb	r1, [r3, r2]
 700              		.loc 1 91 22 discriminator 3
 701 0018 074B     		ldr	r3, .L35
 702 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 703 001c 0133     		adds	r3, r3, #1
 704 001e DAB2     		uxtb	r2, r3
 705 0020 054B     		ldr	r3, .L35
 706 0022 1A70     		strb	r2, [r3]
 707              	.L33:
 708              		.loc 1 91 16 discriminator 1
 709 0024 044B     		ldr	r3, .L35
 710 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 711              		.loc 1 91 5 discriminator 1
 712 0028 592B     		cmp	r3, #89
 713 002a EFD9     		bls	.L34
  92:Src/main.c    **** }
 714              		.loc 1 92 1
 715 002c 00BF     		nop
 716 002e 00BF     		nop
 717 0030 BD46     		mov	sp, r7
 718              	.LCFI33:
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 0032 80BC     		pop	{r7}
 722              	.LCFI34:
 723              		.cfi_restore 7
 724              		.cfi_def_cfa_offset 0
 725 0034 7047     		bx	lr
 726              	.L36:
 727 0036 00BF     		.align	2
 728              	.L35:
 729 0038 00000000 		.word	i
 730 003c 00000000 		.word	buffer
 731              		.cfi_endproc
 732              	.LFE73:
 734              		.section	.rodata
 735 0089 000000   		.align	2
 736              	.LC10:
 737 008c 41542B43 		.ascii	"AT+CMGDA=\"DEL ALL\"\015\012\000"
 737      4D474441 
 737      3D224445 
 737      4C20414C 
 737      4C220D0A 
 738              		.section	.text.delete_sms,"ax",%progbits
 739              		.align	1
 740              		.global	delete_sms
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 744              		.fpu softvfp
 746              	delete_sms:
 747              	.LFB74:
  93:Src/main.c    **** void delete_sms(){
 748              		.loc 1 93 18
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 0
 751              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 16


 752 0000 80B5     		push	{r7, lr}
 753              	.LCFI35:
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 7, -8
 756              		.cfi_offset 14, -4
 757 0002 00AF     		add	r7, sp, #0
 758              	.LCFI36:
 759              		.cfi_def_cfa_register 7
  94:Src/main.c    ****     UART_Write_Text("AT+CMGDA=\"DEL ALL\"\r\n");
 760              		.loc 1 94 5
 761 0004 0448     		ldr	r0, .L38
 762 0006 FFF7FEFF 		bl	UART_Write_Text
  95:Src/main.c    ****     delayms(500);
 763              		.loc 1 95 5
 764 000a 4FF4FA70 		mov	r0, #500
 765 000e FFF7FEFF 		bl	delayms
  96:Src/main.c    **** }
 766              		.loc 1 96 1
 767 0012 00BF     		nop
 768 0014 80BD     		pop	{r7, pc}
 769              	.L39:
 770 0016 00BF     		.align	2
 771              	.L38:
 772 0018 8C000000 		.word	.LC10
 773              		.cfi_endproc
 774              	.LFE74:
 776              		.section	.text.reverse,"ax",%progbits
 777              		.align	1
 778              		.global	reverse
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 782              		.fpu softvfp
 784              	reverse:
 785              	.LFB75:
  97:Src/main.c    **** void reverse(char* str, int len) {
 786              		.loc 1 97 34
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 24
 789              		@ frame_needed = 1, uses_anonymous_args = 0
 790              		@ link register save eliminated.
 791 0000 80B4     		push	{r7}
 792              	.LCFI37:
 793              		.cfi_def_cfa_offset 4
 794              		.cfi_offset 7, -4
 795 0002 87B0     		sub	sp, sp, #28
 796              	.LCFI38:
 797              		.cfi_def_cfa_offset 32
 798 0004 00AF     		add	r7, sp, #0
 799              	.LCFI39:
 800              		.cfi_def_cfa_register 7
 801 0006 7860     		str	r0, [r7, #4]
 802 0008 3960     		str	r1, [r7]
  98:Src/main.c    ****     int i = 0, j = len - 1, temp; 
 803              		.loc 1 98 9
 804 000a 0023     		movs	r3, #0
 805 000c 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 17


 806              		.loc 1 98 16
 807 000e 3B68     		ldr	r3, [r7]
 808 0010 013B     		subs	r3, r3, #1
 809 0012 3B61     		str	r3, [r7, #16]
  99:Src/main.c    ****     while (i < j) { 
 810              		.loc 1 99 11
 811 0014 18E0     		b	.L41
 812              	.L42:
 100:Src/main.c    ****         temp = str[i]; 
 813              		.loc 1 100 19
 814 0016 7B69     		ldr	r3, [r7, #20]
 815 0018 7A68     		ldr	r2, [r7, #4]
 816 001a 1344     		add	r3, r3, r2
 817 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 818              		.loc 1 100 14
 819 001e FB60     		str	r3, [r7, #12]
 101:Src/main.c    ****         str[i] = str[j]; 
 820              		.loc 1 101 21
 821 0020 3B69     		ldr	r3, [r7, #16]
 822 0022 7A68     		ldr	r2, [r7, #4]
 823 0024 1A44     		add	r2, r2, r3
 824              		.loc 1 101 12
 825 0026 7B69     		ldr	r3, [r7, #20]
 826 0028 7968     		ldr	r1, [r7, #4]
 827 002a 0B44     		add	r3, r3, r1
 828              		.loc 1 101 21
 829 002c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 830              		.loc 1 101 16
 831 002e 1A70     		strb	r2, [r3]
 102:Src/main.c    ****         str[j] = temp; 
 832              		.loc 1 102 12
 833 0030 3B69     		ldr	r3, [r7, #16]
 834 0032 7A68     		ldr	r2, [r7, #4]
 835 0034 1344     		add	r3, r3, r2
 836              		.loc 1 102 16
 837 0036 FA68     		ldr	r2, [r7, #12]
 838 0038 D2B2     		uxtb	r2, r2
 839 003a 1A70     		strb	r2, [r3]
 103:Src/main.c    ****         i++; 
 840              		.loc 1 103 10
 841 003c 7B69     		ldr	r3, [r7, #20]
 842 003e 0133     		adds	r3, r3, #1
 843 0040 7B61     		str	r3, [r7, #20]
 104:Src/main.c    ****         j--; 
 844              		.loc 1 104 10
 845 0042 3B69     		ldr	r3, [r7, #16]
 846 0044 013B     		subs	r3, r3, #1
 847 0046 3B61     		str	r3, [r7, #16]
 848              	.L41:
  99:Src/main.c    ****         temp = str[i]; 
 849              		.loc 1 99 11
 850 0048 7A69     		ldr	r2, [r7, #20]
 851 004a 3B69     		ldr	r3, [r7, #16]
 852 004c 9A42     		cmp	r2, r3
 853 004e E2DB     		blt	.L42
 105:Src/main.c    ****     } 
 106:Src/main.c    **** }
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 18


 854              		.loc 1 106 1
 855 0050 00BF     		nop
 856 0052 00BF     		nop
 857 0054 1C37     		adds	r7, r7, #28
 858              	.LCFI40:
 859              		.cfi_def_cfa_offset 4
 860 0056 BD46     		mov	sp, r7
 861              	.LCFI41:
 862              		.cfi_def_cfa_register 13
 863              		@ sp needed
 864 0058 80BC     		pop	{r7}
 865              	.LCFI42:
 866              		.cfi_restore 7
 867              		.cfi_def_cfa_offset 0
 868 005a 7047     		bx	lr
 869              		.cfi_endproc
 870              	.LFE75:
 872              		.section	.text.intToStr,"ax",%progbits
 873              		.align	1
 874              		.global	intToStr
 875              		.syntax unified
 876              		.thumb
 877              		.thumb_func
 878              		.fpu softvfp
 880              	intToStr:
 881              	.LFB76:
 107:Src/main.c    **** int intToStr(int x, char str[], int d) {
 882              		.loc 1 107 40
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 24
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886 0000 80B5     		push	{r7, lr}
 887              	.LCFI43:
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 86B0     		sub	sp, sp, #24
 892              	.LCFI44:
 893              		.cfi_def_cfa_offset 32
 894 0004 00AF     		add	r7, sp, #0
 895              	.LCFI45:
 896              		.cfi_def_cfa_register 7
 897 0006 F860     		str	r0, [r7, #12]
 898 0008 B960     		str	r1, [r7, #8]
 899 000a 7A60     		str	r2, [r7, #4]
 108:Src/main.c    ****     int i = 0; 
 900              		.loc 1 108 9
 901 000c 0023     		movs	r3, #0
 902 000e 7B61     		str	r3, [r7, #20]
 109:Src/main.c    ****     while (x) { 
 903              		.loc 1 109 11
 904 0010 1DE0     		b	.L44
 905              	.L45:
 110:Src/main.c    ****         str[i++] = (x % 10) + '0'; 
 906              		.loc 1 110 23
 907 0012 FA68     		ldr	r2, [r7, #12]
 908 0014 1D4B     		ldr	r3, .L49
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 19


 909 0016 83FB0213 		smull	r1, r3, r3, r2
 910 001a 9910     		asrs	r1, r3, #2
 911 001c D317     		asrs	r3, r2, #31
 912 001e C91A     		subs	r1, r1, r3
 913 0020 0B46     		mov	r3, r1
 914 0022 9B00     		lsls	r3, r3, #2
 915 0024 0B44     		add	r3, r3, r1
 916 0026 5B00     		lsls	r3, r3, #1
 917 0028 D11A     		subs	r1, r2, r3
 918              		.loc 1 110 29
 919 002a CAB2     		uxtb	r2, r1
 920              		.loc 1 110 14
 921 002c 7B69     		ldr	r3, [r7, #20]
 922 002e 591C     		adds	r1, r3, #1
 923 0030 7961     		str	r1, [r7, #20]
 924 0032 1946     		mov	r1, r3
 925              		.loc 1 110 12
 926 0034 BB68     		ldr	r3, [r7, #8]
 927 0036 0B44     		add	r3, r3, r1
 928              		.loc 1 110 29
 929 0038 3032     		adds	r2, r2, #48
 930 003a D2B2     		uxtb	r2, r2
 931              		.loc 1 110 18
 932 003c 1A70     		strb	r2, [r3]
 111:Src/main.c    ****         x = x / 10; 
 933              		.loc 1 111 11
 934 003e FB68     		ldr	r3, [r7, #12]
 935 0040 124A     		ldr	r2, .L49
 936 0042 82FB0312 		smull	r1, r2, r2, r3
 937 0046 9210     		asrs	r2, r2, #2
 938 0048 DB17     		asrs	r3, r3, #31
 939 004a D31A     		subs	r3, r2, r3
 940 004c FB60     		str	r3, [r7, #12]
 941              	.L44:
 109:Src/main.c    ****     while (x) { 
 942              		.loc 1 109 11
 943 004e FB68     		ldr	r3, [r7, #12]
 944 0050 002B     		cmp	r3, #0
 945 0052 DED1     		bne	.L45
 112:Src/main.c    ****     }  // If number of digits required is more, then add 0s at the beginning 
 113:Src/main.c    ****     while (i < d) 
 946              		.loc 1 113 11
 947 0054 07E0     		b	.L46
 948              	.L47:
 114:Src/main.c    ****         str[i++] = '0';  
 949              		.loc 1 114 14
 950 0056 7B69     		ldr	r3, [r7, #20]
 951 0058 5A1C     		adds	r2, r3, #1
 952 005a 7A61     		str	r2, [r7, #20]
 953 005c 1A46     		mov	r2, r3
 954              		.loc 1 114 12
 955 005e BB68     		ldr	r3, [r7, #8]
 956 0060 1344     		add	r3, r3, r2
 957              		.loc 1 114 18
 958 0062 3022     		movs	r2, #48
 959 0064 1A70     		strb	r2, [r3]
 960              	.L46:
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 20


 113:Src/main.c    ****         str[i++] = '0';  
 961              		.loc 1 113 11
 962 0066 7A69     		ldr	r2, [r7, #20]
 963 0068 7B68     		ldr	r3, [r7, #4]
 964 006a 9A42     		cmp	r2, r3
 965 006c F3DB     		blt	.L47
 115:Src/main.c    ****     reverse(str, i); 
 966              		.loc 1 115 5
 967 006e 7969     		ldr	r1, [r7, #20]
 968 0070 B868     		ldr	r0, [r7, #8]
 969 0072 FFF7FEFF 		bl	reverse
 116:Src/main.c    ****     str[i] = '\0'; 
 970              		.loc 1 116 8
 971 0076 7B69     		ldr	r3, [r7, #20]
 972 0078 BA68     		ldr	r2, [r7, #8]
 973 007a 1344     		add	r3, r3, r2
 974              		.loc 1 116 12
 975 007c 0022     		movs	r2, #0
 976 007e 1A70     		strb	r2, [r3]
 117:Src/main.c    ****     return i; 
 977              		.loc 1 117 12
 978 0080 7B69     		ldr	r3, [r7, #20]
 118:Src/main.c    **** }
 979              		.loc 1 118 1
 980 0082 1846     		mov	r0, r3
 981 0084 1837     		adds	r7, r7, #24
 982              	.LCFI46:
 983              		.cfi_def_cfa_offset 8
 984 0086 BD46     		mov	sp, r7
 985              	.LCFI47:
 986              		.cfi_def_cfa_register 13
 987              		@ sp needed
 988 0088 80BD     		pop	{r7, pc}
 989              	.L50:
 990 008a 00BF     		.align	2
 991              	.L49:
 992 008c 67666666 		.word	1717986919
 993              		.cfi_endproc
 994              	.LFE76:
 996              		.section	.text.mypow,"ax",%progbits
 997              		.align	1
 998              		.global	mypow
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu softvfp
 1004              	mypow:
 1005              	.LFB77:
 119:Src/main.c    **** long int mypow(int x,int n) {
 1006              		.loc 1 119 29
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 16
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010              		@ link register save eliminated.
 1011 0000 80B4     		push	{r7}
 1012              	.LCFI48:
 1013              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 21


 1014              		.cfi_offset 7, -4
 1015 0002 85B0     		sub	sp, sp, #20
 1016              	.LCFI49:
 1017              		.cfi_def_cfa_offset 24
 1018 0004 00AF     		add	r7, sp, #0
 1019              	.LCFI50:
 1020              		.cfi_def_cfa_register 7
 1021 0006 7860     		str	r0, [r7, #4]
 1022 0008 3960     		str	r1, [r7]
 120:Src/main.c    ****     int i; /* Variable used in loop counter */ 
 121:Src/main.c    ****     int number = 1;  
 1023              		.loc 1 121 9
 1024 000a 0123     		movs	r3, #1
 1025 000c BB60     		str	r3, [r7, #8]
 122:Src/main.c    ****     for (i = 0; i < n; ++i) 
 1026              		.loc 1 122 12
 1027 000e 0023     		movs	r3, #0
 1028 0010 FB60     		str	r3, [r7, #12]
 1029              		.loc 1 122 5
 1030 0012 07E0     		b	.L52
 1031              	.L53:
 123:Src/main.c    ****         number *= x; 
 1032              		.loc 1 123 16 discriminator 3
 1033 0014 BB68     		ldr	r3, [r7, #8]
 1034 0016 7A68     		ldr	r2, [r7, #4]
 1035 0018 02FB03F3 		mul	r3, r2, r3
 1036 001c BB60     		str	r3, [r7, #8]
 122:Src/main.c    ****     for (i = 0; i < n; ++i) 
 1037              		.loc 1 122 24 discriminator 3
 1038 001e FB68     		ldr	r3, [r7, #12]
 1039 0020 0133     		adds	r3, r3, #1
 1040 0022 FB60     		str	r3, [r7, #12]
 1041              	.L52:
 122:Src/main.c    ****     for (i = 0; i < n; ++i) 
 1042              		.loc 1 122 5 discriminator 1
 1043 0024 FA68     		ldr	r2, [r7, #12]
 1044 0026 3B68     		ldr	r3, [r7]
 1045 0028 9A42     		cmp	r2, r3
 1046 002a F3DB     		blt	.L53
 124:Src/main.c    ****     return(number); 
 1047              		.loc 1 124 11
 1048 002c BB68     		ldr	r3, [r7, #8]
 125:Src/main.c    **** } 
 1049              		.loc 1 125 1
 1050 002e 1846     		mov	r0, r3
 1051 0030 1437     		adds	r7, r7, #20
 1052              	.LCFI51:
 1053              		.cfi_def_cfa_offset 4
 1054 0032 BD46     		mov	sp, r7
 1055              	.LCFI52:
 1056              		.cfi_def_cfa_register 13
 1057              		@ sp needed
 1058 0034 80BC     		pop	{r7}
 1059              	.LCFI53:
 1060              		.cfi_restore 7
 1061              		.cfi_def_cfa_offset 0
 1062 0036 7047     		bx	lr
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 22


 1063              		.cfi_endproc
 1064              	.LFE77:
 1066              		.global	__aeabi_f2iz
 1067              		.global	__aeabi_i2f
 1068              		.global	__aeabi_fsub
 1069              		.global	__aeabi_fmul
 1070              		.section	.text.ftos,"ax",%progbits
 1071              		.align	1
 1072              		.global	ftos
 1073              		.syntax unified
 1074              		.thumb
 1075              		.thumb_func
 1076              		.fpu softvfp
 1078              	ftos:
 1079              	.LFB78:
 126:Src/main.c    **** void ftos(float n, char* res, int afterpoint){     
 1080              		.loc 1 126 46
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 32
 1083              		@ frame_needed = 1, uses_anonymous_args = 0
 1084 0000 80B5     		push	{r7, lr}
 1085              	.LCFI54:
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 7, -8
 1088              		.cfi_offset 14, -4
 1089 0002 88B0     		sub	sp, sp, #32
 1090              	.LCFI55:
 1091              		.cfi_def_cfa_offset 40
 1092 0004 00AF     		add	r7, sp, #0
 1093              	.LCFI56:
 1094              		.cfi_def_cfa_register 7
 1095 0006 F860     		str	r0, [r7, #12]	@ float
 1096 0008 B960     		str	r1, [r7, #8]
 1097 000a 7A60     		str	r2, [r7, #4]
 127:Src/main.c    ****     int ipart = (int)n;              // Extract integer part    
 1098              		.loc 1 127 9
 1099 000c F868     		ldr	r0, [r7, #12]	@ float
 1100 000e FFF7FEFF 		bl	__aeabi_f2iz
 1101              	.LVL0:
 1102 0012 0346     		mov	r3, r0
 1103 0014 FB61     		str	r3, [r7, #28]
 128:Src/main.c    ****     float fpart = n - (float)ipart;  // Extract floating part  
 1104              		.loc 1 128 23
 1105 0016 F869     		ldr	r0, [r7, #28]
 1106 0018 FFF7FEFF 		bl	__aeabi_i2f
 1107              	.LVL1:
 1108 001c 0346     		mov	r3, r0
 1109              		.loc 1 128 11
 1110 001e 1946     		mov	r1, r3
 1111 0020 F868     		ldr	r0, [r7, #12]	@ float
 1112 0022 FFF7FEFF 		bl	__aeabi_fsub
 1113              	.LVL2:
 1114 0026 0346     		mov	r3, r0
 1115 0028 BB61     		str	r3, [r7, #24]	@ float
 129:Src/main.c    ****     int i = intToStr(ipart, res, 0); // convert integer part to string   
 1116              		.loc 1 129 13
 1117 002a 0022     		movs	r2, #0
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 23


 1118 002c B968     		ldr	r1, [r7, #8]
 1119 002e F869     		ldr	r0, [r7, #28]
 1120 0030 FFF7FEFF 		bl	intToStr
 1121 0034 7861     		str	r0, [r7, #20]
 130:Src/main.c    ****     if (afterpoint != 0) {           // check for display option after point 
 1122              		.loc 1 130 8
 1123 0036 7B68     		ldr	r3, [r7, #4]
 1124 0038 002B     		cmp	r3, #0
 1125 003a 1ED0     		beq	.L57
 131:Src/main.c    ****         res[i] = '.';                // add dot  
 1126              		.loc 1 131 12
 1127 003c 7B69     		ldr	r3, [r7, #20]
 1128 003e BA68     		ldr	r2, [r7, #8]
 1129 0040 1344     		add	r3, r3, r2
 1130              		.loc 1 131 16
 1131 0042 2E22     		movs	r2, #46
 1132 0044 1A70     		strb	r2, [r3]
 132:Src/main.c    ****         // Get the value of fraction part upto given no. 
 133:Src/main.c    ****         // of points after dot. The third parameter  
 134:Src/main.c    ****         // is needed to handle cases like 233.007 
 135:Src/main.c    ****         fpart = fpart * mypow(10, afterpoint);  
 1133              		.loc 1 135 25
 1134 0046 7968     		ldr	r1, [r7, #4]
 1135 0048 0A20     		movs	r0, #10
 1136 004a FFF7FEFF 		bl	mypow
 1137 004e 0346     		mov	r3, r0
 1138              		.loc 1 135 23
 1139 0050 1846     		mov	r0, r3
 1140 0052 FFF7FEFF 		bl	__aeabi_i2f
 1141              	.LVL3:
 1142 0056 0346     		mov	r3, r0
 1143              		.loc 1 135 15
 1144 0058 1946     		mov	r1, r3
 1145 005a B869     		ldr	r0, [r7, #24]	@ float
 1146 005c FFF7FEFF 		bl	__aeabi_fmul
 1147              	.LVL4:
 1148 0060 0346     		mov	r3, r0
 1149 0062 BB61     		str	r3, [r7, #24]	@ float
 136:Src/main.c    ****         intToStr((int)fpart, res + i + 1, afterpoint); 
 1150              		.loc 1 136 9
 1151 0064 B869     		ldr	r0, [r7, #24]	@ float
 1152 0066 FFF7FEFF 		bl	__aeabi_f2iz
 1153              	.LVL5:
 1154              		.loc 1 136 38
 1155 006a 7B69     		ldr	r3, [r7, #20]
 1156 006c 0133     		adds	r3, r3, #1
 1157              		.loc 1 136 9
 1158 006e BA68     		ldr	r2, [r7, #8]
 1159 0070 1344     		add	r3, r3, r2
 1160 0072 7A68     		ldr	r2, [r7, #4]
 1161 0074 1946     		mov	r1, r3
 1162 0076 FFF7FEFF 		bl	intToStr
 1163              	.L57:
 137:Src/main.c    ****     } 
 138:Src/main.c    **** }
 1164              		.loc 1 138 1
 1165 007a 00BF     		nop
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 24


 1166 007c 2037     		adds	r7, r7, #32
 1167              	.LCFI57:
 1168              		.cfi_def_cfa_offset 8
 1169 007e BD46     		mov	sp, r7
 1170              	.LCFI58:
 1171              		.cfi_def_cfa_register 13
 1172              		@ sp needed
 1173 0080 80BD     		pop	{r7, pc}
 1174              		.cfi_endproc
 1175              	.LFE78:
 1177              		.section	.rodata
 1178 00a1 000000   		.align	2
 1179              	.LC11:
 1180 00a4 41542B43 		.ascii	"AT+CMGR=1\015\012\000"
 1180      4D47523D 
 1180      310D0A00 
 1181              		.align	2
 1182              	.LC12:
 1183 00b0 4E677531 		.ascii	"Ngu1\000"
 1183      00
 1184 00b5 000000   		.align	2
 1185              	.LC13:
 1186 00b8 64612062 		.ascii	"da bat den phong ngu\000"
 1186      61742064 
 1186      656E2070 
 1186      686F6E67 
 1186      206E6775 
 1187 00cd 000000   		.align	2
 1188              	.LC14:
 1189 00d0 4E677530 		.ascii	"Ngu0\000"
 1189      00
 1190 00d5 000000   		.align	2
 1191              	.LC15:
 1192 00d8 64612074 		.ascii	"da tat den phong ngu\000"
 1192      61742064 
 1192      656E2070 
 1192      686F6E67 
 1192      206E6775 
 1193 00ed 000000   		.align	2
 1194              	.LC16:
 1195 00f0 4B686163 		.ascii	"Khach1\000"
 1195      683100
 1196 00f7 00       		.align	2
 1197              	.LC17:
 1198 00f8 64612062 		.ascii	"da bat den phong khach\000"
 1198      61742064 
 1198      656E2070 
 1198      686F6E67 
 1198      206B6861 
 1199 010f 00       		.align	2
 1200              	.LC18:
 1201 0110 4B686163 		.ascii	"Khach0\000"
 1201      683000
 1202 0117 00       		.align	2
 1203              	.LC19:
 1204 0118 64612074 		.ascii	"da tat den phong khach\000"
 1204      61742064 
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 25


 1204      656E2070 
 1204      686F6E67 
 1204      206B6861 
 1205 012f 00       		.align	2
 1206              	.LC20:
 1207 0130 42657031 		.ascii	"Bep1\000"
 1207      00
 1208 0135 000000   		.align	2
 1209              	.LC21:
 1210 0138 64612062 		.ascii	"da bat den phong bep\000"
 1210      61742064 
 1210      656E2070 
 1210      686F6E67 
 1210      20626570 
 1211 014d 000000   		.align	2
 1212              	.LC22:
 1213 0150 42657030 		.ascii	"Bep0\000"
 1213      00
 1214 0155 000000   		.align	2
 1215              	.LC23:
 1216 0158 64612074 		.ascii	"da tat den phong bep\000"
 1216      61742064 
 1216      656E2070 
 1216      686F6E67 
 1216      20626570 
 1217 016d 000000   		.align	2
 1218              	.LC24:
 1219 0170 696E666F 		.ascii	"info\000"
 1219      00
 1220 0175 000000   		.align	2
 1221              	.LC25:
 1222 0178 64656E20 		.ascii	"den phong bep dang bat\015\012\000"
 1222      70686F6E 
 1222      67206265 
 1222      70206461 
 1222      6E672062 
 1223 0191 000000   		.align	2
 1224              	.LC26:
 1225 0194 64656E20 		.ascii	"den phong bep dang tat\015\012\000"
 1225      70686F6E 
 1225      67206265 
 1225      70206461 
 1225      6E672074 
 1226 01ad 000000   		.align	2
 1227              	.LC27:
 1228 01b0 64656E20 		.ascii	"den phong khach dang bat\015\012\000"
 1228      70686F6E 
 1228      67206B68 
 1228      61636820 
 1228      64616E67 
 1229 01cb 00       		.align	2
 1230              	.LC28:
 1231 01cc 64656E20 		.ascii	"den phong khach dang tat\015\012\000"
 1231      70686F6E 
 1231      67206B68 
 1231      61636820 
 1231      64616E67 
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 26


 1232 01e7 00       		.align	2
 1233              	.LC29:
 1234 01e8 64656E20 		.ascii	"den phong ngu dang bat\015\012\000"
 1234      70686F6E 
 1234      67206E67 
 1234      75206461 
 1234      6E672062 
 1235 0201 000000   		.align	2
 1236              	.LC30:
 1237 0204 64656E20 		.ascii	"den phong ngu dang tat\015\012\000"
 1237      70686F6E 
 1237      67206E67 
 1237      75206461 
 1237      6E672074 
 1238 021d 000000   		.align	2
 1239              	.LC31:
 1240 0220 6E686965 		.ascii	"nhiet do phong la: \000"
 1240      7420646F 
 1240      2070686F 
 1240      6E67206C 
 1240      613A2000 
 1241              		.section	.text.main,"ax",%progbits
 1242              		.align	1
 1243              		.global	main
 1244              		.syntax unified
 1245              		.thumb
 1246              		.thumb_func
 1247              		.fpu softvfp
 1249              	main:
 1250              	.LFB79:
 139:Src/main.c    **** int main(void){
 1251              		.loc 1 139 15
 1252              		.cfi_startproc
 1253              		@ args = 0, pretend = 0, frame = 96
 1254              		@ frame_needed = 1, uses_anonymous_args = 0
 1255 0000 80B5     		push	{r7, lr}
 1256              	.LCFI59:
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 98B0     		sub	sp, sp, #96
 1261              	.LCFI60:
 1262              		.cfi_def_cfa_offset 104
 1263 0004 00AF     		add	r7, sp, #0
 1264              	.LCFI61:
 1265              		.cfi_def_cfa_register 7
 140:Src/main.c    **** 
 141:Src/main.c    ****     TIM_TimeBaseInitTypeDef timerInit;                      // khai bao struct timerInit
 142:Src/main.c    ****     RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2, ENABLE);    //cap xung cho timer2
 1266              		.loc 1 142 5
 1267 0006 0121     		movs	r1, #1
 1268 0008 0120     		movs	r0, #1
 1269 000a FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 143:Src/main.c    ****     timerInit.TIM_CounterMode = TIM_CounterMode_Up;         //che do dem len
 1270              		.loc 1 143 31
 1271 000e 0023     		movs	r3, #0
 1272 0010 A7F84630 		strh	r3, [r7, #70]	@ movhi
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 27


 144:Src/main.c    ****     timerInit.TIM_Period = 0xffff;                          //gia tri thanh ghi reset qua trinh dem
 1273              		.loc 1 144 26
 1274 0014 4FF6FF73 		movw	r3, #65535
 1275 0018 A7F84830 		strh	r3, [r7, #72]	@ movhi
 145:Src/main.c    ****     timerInit.TIM_Prescaler = 72 - 1;          
 1276              		.loc 1 145 29
 1277 001c 4723     		movs	r3, #71
 1278 001e A7F84430 		strh	r3, [r7, #68]	@ movhi
 146:Src/main.c    ****     TIM_TimeBaseInit(TIM2, &timerInit);
 1279              		.loc 1 146 5
 1280 0022 07F14403 		add	r3, r7, #68
 1281 0026 1946     		mov	r1, r3
 1282 0028 4FF08040 		mov	r0, #1073741824
 1283 002c FFF7FEFF 		bl	TIM_TimeBaseInit
 147:Src/main.c    ****     TIM_Cmd(TIM2, ENABLE);
 1284              		.loc 1 147 5
 1285 0030 0121     		movs	r1, #1
 1286 0032 4FF08040 		mov	r0, #1073741824
 1287 0036 FFF7FEFF 		bl	TIM_Cmd
 148:Src/main.c    **** 
 149:Src/main.c    ****     GPIO_InitTypeDef gpioInit;          //khoi tao struct gpio
 150:Src/main.c    ****     RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
 1288              		.loc 1 150 5
 1289 003a 0121     		movs	r1, #1
 1290 003c 1020     		movs	r0, #16
 1291 003e FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 151:Src/main.c    ****     gpioInit.GPIO_Mode = GPIO_Mode_Out_PP;
 1292              		.loc 1 151 24
 1293 0042 1023     		movs	r3, #16
 1294 0044 87F84330 		strb	r3, [r7, #67]
 152:Src/main.c    ****     gpioInit.GPIO_Pin = GPIO_Pin_13;
 1295              		.loc 1 152 23
 1296 0048 4FF40053 		mov	r3, #8192
 1297 004c A7F84030 		strh	r3, [r7, #64]	@ movhi
 153:Src/main.c    ****     gpioInit.GPIO_Speed = GPIO_Speed_50MHz;
 1298              		.loc 1 153 25
 1299 0050 0323     		movs	r3, #3
 1300 0052 87F84230 		strb	r3, [r7, #66]
 154:Src/main.c    ****     GPIO_Init(GPIOC, &gpioInit);
 1301              		.loc 1 154 5
 1302 0056 07F14003 		add	r3, r7, #64
 1303 005a 1946     		mov	r1, r3
 1304 005c BB48     		ldr	r0, .L81
 1305 005e FFF7FEFF 		bl	GPIO_Init
 155:Src/main.c    ****     GPIO_SetBits(GPIOC, GPIO_Pin_13);
 1306              		.loc 1 155 5
 1307 0062 4FF40051 		mov	r1, #8192
 1308 0066 B948     		ldr	r0, .L81
 1309 0068 FFF7FEFF 		bl	GPIO_SetBits
 156:Src/main.c    ****     
 157:Src/main.c    ****     RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
 1310              		.loc 1 157 5
 1311 006c 0121     		movs	r1, #1
 1312 006e 0420     		movs	r0, #4
 1313 0070 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 158:Src/main.c    ****     gpioInit.GPIO_Mode = GPIO_Mode_Out_PP ;          
 1314              		.loc 1 158 24
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 28


 1315 0074 1023     		movs	r3, #16
 1316 0076 87F84330 		strb	r3, [r7, #67]
 159:Src/main.c    ****     gpioInit.GPIO_Pin = GPIO_Pin_8|GPIO_Pin_9|GPIO_Pin_10|GPIO_Pin_11;  // led
 1317              		.loc 1 159 23
 1318 007a 4FF47063 		mov	r3, #3840
 1319 007e A7F84030 		strh	r3, [r7, #64]	@ movhi
 160:Src/main.c    ****     gpioInit.GPIO_Speed = GPIO_Speed_50MHz;
 1320              		.loc 1 160 25
 1321 0082 0323     		movs	r3, #3
 1322 0084 87F84230 		strb	r3, [r7, #66]
 161:Src/main.c    ****     GPIO_Init(GPIOA, &gpioInit);
 1323              		.loc 1 161 5
 1324 0088 07F14003 		add	r3, r7, #64
 1325 008c 1946     		mov	r1, r3
 1326 008e B048     		ldr	r0, .L81+4
 1327 0090 FFF7FEFF 		bl	GPIO_Init
 162:Src/main.c    ****     GPIO_ResetBits(GPIOA, GPIO_Pin_8);
 1328              		.loc 1 162 5
 1329 0094 4FF48071 		mov	r1, #256
 1330 0098 AD48     		ldr	r0, .L81+4
 1331 009a FFF7FEFF 		bl	GPIO_ResetBits
 163:Src/main.c    ****     GPIO_ResetBits(GPIOA, GPIO_Pin_9);
 1332              		.loc 1 163 5
 1333 009e 4FF40071 		mov	r1, #512
 1334 00a2 AB48     		ldr	r0, .L81+4
 1335 00a4 FFF7FEFF 		bl	GPIO_ResetBits
 164:Src/main.c    ****     GPIO_ResetBits(GPIOA, GPIO_Pin_10);
 1336              		.loc 1 164 5
 1337 00a8 4FF48061 		mov	r1, #1024
 1338 00ac A848     		ldr	r0, .L81+4
 1339 00ae FFF7FEFF 		bl	GPIO_ResetBits
 165:Src/main.c    ****     GPIO_ResetBits(GPIOA, GPIO_Pin_11);
 1340              		.loc 1 165 5
 1341 00b2 4FF40061 		mov	r1, #2048
 1342 00b6 A648     		ldr	r0, .L81+4
 1343 00b8 FFF7FEFF 		bl	GPIO_ResetBits
 166:Src/main.c    ****     gpioInit.GPIO_Mode = GPIO_Mode_IPU ;          // input pull-up
 1344              		.loc 1 166 24
 1345 00bc 4823     		movs	r3, #72
 1346 00be 87F84330 		strb	r3, [r7, #67]
 167:Src/main.c    ****     gpioInit.GPIO_Pin = GPIO_Pin_12;  // A12 as button
 1347              		.loc 1 167 23
 1348 00c2 4FF48053 		mov	r3, #4096
 1349 00c6 A7F84030 		strh	r3, [r7, #64]	@ movhi
 168:Src/main.c    ****     gpioInit.GPIO_Speed = GPIO_Speed_50MHz;
 1350              		.loc 1 168 25
 1351 00ca 0323     		movs	r3, #3
 1352 00cc 87F84230 		strb	r3, [r7, #66]
 169:Src/main.c    ****     GPIO_Init(GPIOA, &gpioInit);
 1353              		.loc 1 169 5
 1354 00d0 07F14003 		add	r3, r7, #64
 1355 00d4 1946     		mov	r1, r3
 1356 00d6 9E48     		ldr	r0, .L81+4
 1357 00d8 FFF7FEFF 		bl	GPIO_Init
 170:Src/main.c    ****     //PA2 (TX)
 171:Src/main.c    ****     gpioInit.GPIO_Mode = GPIO_Mode_AF_PP ;          // luc chua truyen thi dat muc high
 1358              		.loc 1 171 24
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 29


 1359 00dc 1823     		movs	r3, #24
 1360 00de 87F84330 		strb	r3, [r7, #67]
 172:Src/main.c    ****     gpioInit.GPIO_Pin = GPIO_Pin_2;
 1361              		.loc 1 172 23
 1362 00e2 0423     		movs	r3, #4
 1363 00e4 A7F84030 		strh	r3, [r7, #64]	@ movhi
 173:Src/main.c    ****     gpioInit.GPIO_Speed = GPIO_Speed_50MHz;
 1364              		.loc 1 173 25
 1365 00e8 0323     		movs	r3, #3
 1366 00ea 87F84230 		strb	r3, [r7, #66]
 174:Src/main.c    ****     GPIO_Init(GPIOA, &gpioInit);
 1367              		.loc 1 174 5
 1368 00ee 07F14003 		add	r3, r7, #64
 1369 00f2 1946     		mov	r1, r3
 1370 00f4 9648     		ldr	r0, .L81+4
 1371 00f6 FFF7FEFF 		bl	GPIO_Init
 175:Src/main.c    ****     //PA3 (RX)
 176:Src/main.c    ****     gpioInit.GPIO_Mode = GPIO_Mode_IN_FLOATING;     // nhan du lieu nen input floating
 1372              		.loc 1 176 24
 1373 00fa 0423     		movs	r3, #4
 1374 00fc 87F84330 		strb	r3, [r7, #67]
 177:Src/main.c    ****     gpioInit.GPIO_Pin = GPIO_Pin_3;
 1375              		.loc 1 177 23
 1376 0100 0823     		movs	r3, #8
 1377 0102 A7F84030 		strh	r3, [r7, #64]	@ movhi
 178:Src/main.c    ****     gpioInit.GPIO_Speed = GPIO_Speed_50MHz;
 1378              		.loc 1 178 25
 1379 0106 0323     		movs	r3, #3
 1380 0108 87F84230 		strb	r3, [r7, #66]
 179:Src/main.c    ****     GPIO_Init(GPIOA, &gpioInit);
 1381              		.loc 1 179 5
 1382 010c 07F14003 		add	r3, r7, #64
 1383 0110 1946     		mov	r1, r3
 1384 0112 8F48     		ldr	r0, .L81+4
 1385 0114 FFF7FEFF 		bl	GPIO_Init
 180:Src/main.c    ****     //PA0 read ADC
 181:Src/main.c    ****     gpioInit.GPIO_Mode = GPIO_Mode_AIN;          
 1386              		.loc 1 181 24
 1387 0118 0023     		movs	r3, #0
 1388 011a 87F84330 		strb	r3, [r7, #67]
 182:Src/main.c    ****     gpioInit.GPIO_Pin = GPIO_Pin_0;
 1389              		.loc 1 182 23
 1390 011e 0123     		movs	r3, #1
 1391 0120 A7F84030 		strh	r3, [r7, #64]	@ movhi
 183:Src/main.c    ****     gpioInit.GPIO_Speed = GPIO_Speed_50MHz;
 1392              		.loc 1 183 25
 1393 0124 0323     		movs	r3, #3
 1394 0126 87F84230 		strb	r3, [r7, #66]
 184:Src/main.c    ****     GPIO_Init(GPIOA, &gpioInit);
 1395              		.loc 1 184 5
 1396 012a 07F14003 		add	r3, r7, #64
 1397 012e 1946     		mov	r1, r3
 1398 0130 8748     		ldr	r0, .L81+4
 1399 0132 FFF7FEFF 		bl	GPIO_Init
 185:Src/main.c    **** 
 186:Src/main.c    ****     USART_InitTypeDef uartInit;         //khoi tao struct uart
 187:Src/main.c    ****     RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 30


 1400              		.loc 1 187 5
 1401 0136 0121     		movs	r1, #1
 1402 0138 4FF40030 		mov	r0, #131072
 1403 013c FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 188:Src/main.c    ****     uartInit.USART_BaudRate = 9600;
 1404              		.loc 1 188 29
 1405 0140 4FF41653 		mov	r3, #9600
 1406 0144 3B63     		str	r3, [r7, #48]
 189:Src/main.c    ****     uartInit.USART_HardwareFlowControl = USART_HardwareFlowControl_None;      //chon che do khong b
 1407              		.loc 1 189 40
 1408 0146 0023     		movs	r3, #0
 1409 0148 BB87     		strh	r3, [r7, #60]	@ movhi
 190:Src/main.c    ****     uartInit.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;           // che do vua truyen vua nhan (s
 1410              		.loc 1 190 25
 1411 014a 0C23     		movs	r3, #12
 1412 014c 7B87     		strh	r3, [r7, #58]	@ movhi
 191:Src/main.c    ****     uartInit.USART_Parity = USART_Parity_No;                // khong kiem tra tinh chan le
 1413              		.loc 1 191 27
 1414 014e 0023     		movs	r3, #0
 1415 0150 3B87     		strh	r3, [r7, #56]	@ movhi
 192:Src/main.c    ****     uartInit.USART_StopBits = USART_StopBits_1 ;            // so bit dung = 1
 1416              		.loc 1 192 29
 1417 0152 0023     		movs	r3, #0
 1418 0154 FB86     		strh	r3, [r7, #54]	@ movhi
 193:Src/main.c    ****     uartInit.USART_WordLength = USART_WordLength_8b;        // 8 bit du lieu
 1419              		.loc 1 193 31
 1420 0156 0023     		movs	r3, #0
 1421 0158 BB86     		strh	r3, [r7, #52]	@ movhi
 194:Src/main.c    ****     USART_Init(USART2, &uartInit);
 1422              		.loc 1 194 5
 1423 015a 07F13003 		add	r3, r7, #48
 1424 015e 1946     		mov	r1, r3
 1425 0160 7C48     		ldr	r0, .L81+8
 1426 0162 FFF7FEFF 		bl	USART_Init
 195:Src/main.c    ****     USART_Cmd(USART2, ENABLE);
 1427              		.loc 1 195 5
 1428 0166 0121     		movs	r1, #1
 1429 0168 7A48     		ldr	r0, .L81+8
 1430 016a FFF7FEFF 		bl	USART_Cmd
 196:Src/main.c    ****           
 197:Src/main.c    ****     NVIC_InitTypeDef nvicInit;
 198:Src/main.c    ****     USART_ITConfig(USART2, USART_IT_RXNE, ENABLE);
 1431              		.loc 1 198 5
 1432 016e 0122     		movs	r2, #1
 1433 0170 40F22551 		movw	r1, #1317
 1434 0174 7748     		ldr	r0, .L81+8
 1435 0176 FFF7FEFF 		bl	USART_ITConfig
 199:Src/main.c    ****     nvicInit.NVIC_IRQChannel = USART2_IRQn;
 1436              		.loc 1 199 30
 1437 017a 2623     		movs	r3, #38
 1438 017c 87F82C30 		strb	r3, [r7, #44]
 200:Src/main.c    ****     nvicInit.NVIC_IRQChannelPreemptionPriority = 0;
 1439              		.loc 1 200 48
 1440 0180 0023     		movs	r3, #0
 1441 0182 87F82D30 		strb	r3, [r7, #45]
 201:Src/main.c    ****     nvicInit.NVIC_IRQChannelSubPriority = 0;
 1442              		.loc 1 201 41
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 31


 1443 0186 0023     		movs	r3, #0
 1444 0188 87F82E30 		strb	r3, [r7, #46]
 202:Src/main.c    ****     nvicInit.NVIC_IRQChannelCmd = ENABLE;
 1445              		.loc 1 202 33
 1446 018c 0123     		movs	r3, #1
 1447 018e 87F82F30 		strb	r3, [r7, #47]
 203:Src/main.c    ****     NVIC_Init(&nvicInit);
 1448              		.loc 1 203 5
 1449 0192 07F12C03 		add	r3, r7, #44
 1450 0196 1846     		mov	r0, r3
 1451 0198 FFF7FEFF 		bl	NVIC_Init
 204:Src/main.c    **** 
 205:Src/main.c    ****     ADC_InitTypeDef adcInit;
 206:Src/main.c    ****     RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADC1, ENABLE);    // cap clock cho ADC1
 1452              		.loc 1 206 5
 1453 019c 0121     		movs	r1, #1
 1454 019e 4FF40070 		mov	r0, #512
 1455 01a2 FFF7FEFF 		bl	RCC_APB2PeriphClockCmd
 207:Src/main.c    ****     adcInit.ADC_ContinuousConvMode = ENABLE;
 1456              		.loc 1 207 36
 1457 01a6 0123     		movs	r3, #1
 1458 01a8 7B77     		strb	r3, [r7, #29]
 208:Src/main.c    ****     adcInit.ADC_DataAlign = ADC_DataAlign_Right;
 1459              		.loc 1 208 27
 1460 01aa 0023     		movs	r3, #0
 1461 01ac 7B62     		str	r3, [r7, #36]
 209:Src/main.c    ****     adcInit.ADC_ExternalTrigConv = ADC_ExternalTrigConv_None;
 1462              		.loc 1 209 34
 1463 01ae 4FF46023 		mov	r3, #917504
 1464 01b2 3B62     		str	r3, [r7, #32]
 210:Src/main.c    ****     adcInit.ADC_Mode = ADC_Mode_Independent;
 1465              		.loc 1 210 22
 1466 01b4 0023     		movs	r3, #0
 1467 01b6 BB61     		str	r3, [r7, #24]
 211:Src/main.c    ****     adcInit.ADC_ScanConvMode = DISABLE;
 1468              		.loc 1 211 30
 1469 01b8 0023     		movs	r3, #0
 1470 01ba 3B77     		strb	r3, [r7, #28]
 212:Src/main.c    ****     adcInit.ADC_NbrOfChannel = 1;       // channel 1
 1471              		.loc 1 212 30
 1472 01bc 0123     		movs	r3, #1
 1473 01be 87F82830 		strb	r3, [r7, #40]
 213:Src/main.c    ****     ADC_Init(ADC1, &adcInit);
 1474              		.loc 1 213 5
 1475 01c2 07F11803 		add	r3, r7, #24
 1476 01c6 1946     		mov	r1, r3
 1477 01c8 6348     		ldr	r0, .L81+12
 1478 01ca FFF7FEFF 		bl	ADC_Init
 214:Src/main.c    **** 
 215:Src/main.c    ****     ADC_RegularChannelConfig(ADC1, ADC_Channel_0, 1, ADC_SampleTime_55Cycles5);// cau hinh channel,
 1479              		.loc 1 215 5
 1480 01ce 0523     		movs	r3, #5
 1481 01d0 0122     		movs	r2, #1
 1482 01d2 0021     		movs	r1, #0
 1483 01d4 6048     		ldr	r0, .L81+12
 1484 01d6 FFF7FEFF 		bl	ADC_RegularChannelConfig
 216:Src/main.c    ****     ADC_Cmd(ADC1, ENABLE);  // cho phep bo adc hoat dong
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 32


 1485              		.loc 1 216 5
 1486 01da 0121     		movs	r1, #1
 1487 01dc 5E48     		ldr	r0, .L81+12
 1488 01de FFF7FEFF 		bl	ADC_Cmd
 217:Src/main.c    ****     ADC_TempSensorVrefintCmd(ENABLE); // cho phep cam bie nhiet hoat dong
 1489              		.loc 1 217 5
 1490 01e2 0120     		movs	r0, #1
 1491 01e4 FFF7FEFF 		bl	ADC_TempSensorVrefintCmd
 218:Src/main.c    ****     ADC_ResetCalibration(ADC1); // reset thanh ghi cablib
 1492              		.loc 1 218 5
 1493 01e8 5B48     		ldr	r0, .L81+12
 1494 01ea FFF7FEFF 		bl	ADC_ResetCalibration
 219:Src/main.c    ****     while(ADC_GetResetCalibrationStatus(ADC1)); // cho thanh ghi reset xong
 1495              		.loc 1 219 10
 1496 01ee 00BF     		nop
 1497              	.L59:
 1498              		.loc 1 219 11 discriminator 1
 1499 01f0 5948     		ldr	r0, .L81+12
 1500 01f2 FFF7FEFF 		bl	ADC_GetResetCalibrationStatus
 1501 01f6 0346     		mov	r3, r0
 1502              		.loc 1 219 10 discriminator 1
 1503 01f8 002B     		cmp	r3, #0
 1504 01fa F9D1     		bne	.L59
 220:Src/main.c    ****     ADC_StartCalibration(ADC1);  // khoi dong bo adc
 1505              		.loc 1 220 5
 1506 01fc 5648     		ldr	r0, .L81+12
 1507 01fe FFF7FEFF 		bl	ADC_StartCalibration
 221:Src/main.c    ****     while(ADC_GetCalibrationStatus(ADC1)); // cho trang thai cablib duoc bat
 1508              		.loc 1 221 10
 1509 0202 00BF     		nop
 1510              	.L60:
 1511              		.loc 1 221 11 discriminator 1
 1512 0204 5448     		ldr	r0, .L81+12
 1513 0206 FFF7FEFF 		bl	ADC_GetCalibrationStatus
 1514 020a 0346     		mov	r3, r0
 1515              		.loc 1 221 10 discriminator 1
 1516 020c 002B     		cmp	r3, #0
 1517 020e F9D1     		bne	.L60
 222:Src/main.c    ****     ADC_SoftwareStartConvCmd(ADC1, ENABLE); // bat dau chuyen doi adc
 1518              		.loc 1 222 5
 1519 0210 0121     		movs	r1, #1
 1520 0212 5148     		ldr	r0, .L81+12
 1521 0214 FFF7FEFF 		bl	ADC_SoftwareStartConvCmd
 223:Src/main.c    **** 
 224:Src/main.c    **** 
 225:Src/main.c    ****     ATinit();
 1522              		.loc 1 225 5
 1523 0218 FFF7FEFF 		bl	ATinit
 1524              	.L80:
 1525              	.LBB2:
 226:Src/main.c    **** 
 227:Src/main.c    ****     while(1){
 228:Src/main.c    ****         int sum_adc1 = 0;
 1526              		.loc 1 228 13
 1527 021c 0023     		movs	r3, #0
 1528 021e FB65     		str	r3, [r7, #92]
 229:Src/main.c    ****         int value_adc1 = 0;
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 33


 1529              		.loc 1 229 13
 1530 0220 0023     		movs	r3, #0
 1531 0222 7B65     		str	r3, [r7, #84]
 1532              	.LBB3:
 230:Src/main.c    ****         for(int b=0; b<10; b++){    // doc 10 lan adc roi lay trung binh ket qua
 1533              		.loc 1 230 17
 1534 0224 0023     		movs	r3, #0
 1535 0226 BB65     		str	r3, [r7, #88]
 1536              		.loc 1 230 9
 1537 0228 0EE0     		b	.L61
 1538              	.L62:
 231:Src/main.c    ****             value_adc1 = ADC_GetConversionValue(ADC1);
 1539              		.loc 1 231 26 discriminator 3
 1540 022a 4B48     		ldr	r0, .L81+12
 1541 022c FFF7FEFF 		bl	ADC_GetConversionValue
 1542 0230 0346     		mov	r3, r0
 1543              		.loc 1 231 24 discriminator 3
 1544 0232 7B65     		str	r3, [r7, #84]
 232:Src/main.c    ****             sum_adc1 = sum_adc1 + value_adc1;
 1545              		.loc 1 232 22 discriminator 3
 1546 0234 FA6D     		ldr	r2, [r7, #92]
 1547 0236 7B6D     		ldr	r3, [r7, #84]
 1548 0238 1344     		add	r3, r3, r2
 1549 023a FB65     		str	r3, [r7, #92]
 233:Src/main.c    ****             delayms(1);
 1550              		.loc 1 233 13 discriminator 3
 1551 023c 0120     		movs	r0, #1
 1552 023e FFF7FEFF 		bl	delayms
 230:Src/main.c    ****             value_adc1 = ADC_GetConversionValue(ADC1);
 1553              		.loc 1 230 29 discriminator 3
 1554 0242 BB6D     		ldr	r3, [r7, #88]
 1555 0244 0133     		adds	r3, r3, #1
 1556 0246 BB65     		str	r3, [r7, #88]
 1557              	.L61:
 230:Src/main.c    ****             value_adc1 = ADC_GetConversionValue(ADC1);
 1558              		.loc 1 230 9 discriminator 1
 1559 0248 BB6D     		ldr	r3, [r7, #88]
 1560 024a 092B     		cmp	r3, #9
 1561 024c EDDD     		ble	.L62
 1562              	.LBE3:
 234:Src/main.c    ****         }
 235:Src/main.c    ****         float adc_tb = sum_adc1/10;
 1563              		.loc 1 235 32
 1564 024e FB6D     		ldr	r3, [r7, #92]
 1565 0250 424A     		ldr	r2, .L81+16
 1566 0252 82FB0312 		smull	r1, r2, r2, r3
 1567 0256 9210     		asrs	r2, r2, #2
 1568 0258 DB17     		asrs	r3, r3, #31
 1569 025a D31A     		subs	r3, r2, r3
 1570              		.loc 1 235 15
 1571 025c 1846     		mov	r0, r3
 1572 025e FFF7FEFF 		bl	__aeabi_i2f
 1573              	.LVL6:
 1574 0262 0346     		mov	r3, r0
 1575 0264 3B65     		str	r3, [r7, #80]	@ float
 236:Src/main.c    ****         if(GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_12) == 0){
 1576              		.loc 1 236 12
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 34


 1577 0266 4FF48051 		mov	r1, #4096
 1578 026a 3948     		ldr	r0, .L81+4
 1579 026c FFF7FEFF 		bl	GPIO_ReadInputDataBit
 1580 0270 0346     		mov	r3, r0
 1581              		.loc 1 236 11
 1582 0272 002B     		cmp	r3, #0
 1583 0274 0ED1     		bne	.L63
 237:Src/main.c    ****             GPIOA -> ODR ^= (1 << 12); // toggle pin A12
 1584              		.loc 1 237 26
 1585 0276 364B     		ldr	r3, .L81+4
 1586 0278 DB68     		ldr	r3, [r3, #12]
 1587 027a 354A     		ldr	r2, .L81+4
 1588 027c 83F48053 		eor	r3, r3, #4096
 1589 0280 D360     		str	r3, [r2, #12]
 238:Src/main.c    ****             while(!GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_12));
 1590              		.loc 1 238 18
 1591 0282 00BF     		nop
 1592              	.L64:
 1593              		.loc 1 238 20 discriminator 1
 1594 0284 4FF48051 		mov	r1, #4096
 1595 0288 3148     		ldr	r0, .L81+4
 1596 028a FFF7FEFF 		bl	GPIO_ReadInputDataBit
 1597 028e 0346     		mov	r3, r0
 1598              		.loc 1 238 18 discriminator 1
 1599 0290 002B     		cmp	r3, #0
 1600 0292 F7D0     		beq	.L64
 1601              	.L63:
 239:Src/main.c    ****         }      
 240:Src/main.c    ****         if(new_sms){
 1602              		.loc 1 240 12
 1603 0294 324B     		ldr	r3, .L81+20
 1604 0296 1B68     		ldr	r3, [r3]
 1605              		.loc 1 240 11
 1606 0298 002B     		cmp	r3, #0
 1607 029a BFD0     		beq	.L80
 241:Src/main.c    ****             new_sms = 0;
 1608              		.loc 1 241 21
 1609 029c 304B     		ldr	r3, .L81+20
 1610 029e 0022     		movs	r2, #0
 1611 02a0 1A60     		str	r2, [r3]
 242:Src/main.c    ****             UART_Write_Text("AT+CMGR=1\r\n");   // read the first SMS
 1612              		.loc 1 242 13
 1613 02a2 3048     		ldr	r0, .L81+24
 1614 02a4 FFF7FEFF 		bl	UART_Write_Text
 243:Src/main.c    ****             delayms(2000);
 1615              		.loc 1 243 13
 1616 02a8 4FF4FA60 		mov	r0, #2000
 1617 02ac FFF7FEFF 		bl	delayms
 244:Src/main.c    ****             ptr = strstr(buffer, "Ngu1");       // use pointer looking for string     
 1618              		.loc 1 244 19
 1619 02b0 2D49     		ldr	r1, .L81+28
 1620 02b2 2E48     		ldr	r0, .L81+32
 1621 02b4 FFF7FEFF 		bl	strstr
 1622 02b8 0346     		mov	r3, r0
 1623              		.loc 1 244 17
 1624 02ba 2D4A     		ldr	r2, .L81+36
 1625 02bc 1360     		str	r3, [r2]
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 35


 245:Src/main.c    ****             if(strncmp(ptr, "Ngu1", 4)==0){     // compare string
 1626              		.loc 1 245 16
 1627 02be 2C4B     		ldr	r3, .L81+36
 1628 02c0 1B68     		ldr	r3, [r3]
 1629 02c2 0422     		movs	r2, #4
 1630 02c4 2849     		ldr	r1, .L81+28
 1631 02c6 1846     		mov	r0, r3
 1632 02c8 FFF7FEFF 		bl	strncmp
 1633 02cc 0346     		mov	r3, r0
 1634              		.loc 1 245 15
 1635 02ce 002B     		cmp	r3, #0
 1636 02d0 08D1     		bne	.L66
 246:Src/main.c    ****                 GPIO_ResetBits(GPIOC, GPIO_Pin_13);              // when receive "Ngu1" turn on the
 1637              		.loc 1 246 17
 1638 02d2 4FF40051 		mov	r1, #8192
 1639 02d6 1D48     		ldr	r0, .L81
 1640 02d8 FFF7FEFF 		bl	GPIO_ResetBits
 247:Src/main.c    ****                 send_sms("da bat den phong ngu");
 1641              		.loc 1 247 17
 1642 02dc 2548     		ldr	r0, .L81+40
 1643 02de FFF7FEFF 		bl	send_sms
 1644 02e2 18E0     		b	.L67
 1645              	.L66:
 248:Src/main.c    ****             }else{
 249:Src/main.c    ****                 ptr = strstr(buffer, "Ngu0");
 1646              		.loc 1 249 23
 1647 02e4 2449     		ldr	r1, .L81+44
 1648 02e6 2148     		ldr	r0, .L81+32
 1649 02e8 FFF7FEFF 		bl	strstr
 1650 02ec 0346     		mov	r3, r0
 1651              		.loc 1 249 21
 1652 02ee 204A     		ldr	r2, .L81+36
 1653 02f0 1360     		str	r3, [r2]
 250:Src/main.c    ****                 if(strncmp(ptr, "Ngu0", 4)==0){      
 1654              		.loc 1 250 20
 1655 02f2 1F4B     		ldr	r3, .L81+36
 1656 02f4 1B68     		ldr	r3, [r3]
 1657 02f6 0422     		movs	r2, #4
 1658 02f8 1F49     		ldr	r1, .L81+44
 1659 02fa 1846     		mov	r0, r3
 1660 02fc FFF7FEFF 		bl	strncmp
 1661 0300 0346     		mov	r3, r0
 1662              		.loc 1 250 19
 1663 0302 002B     		cmp	r3, #0
 1664 0304 07D1     		bne	.L67
 251:Src/main.c    ****                 GPIO_SetBits(GPIOC, GPIO_Pin_13);
 1665              		.loc 1 251 17
 1666 0306 4FF40051 		mov	r1, #8192
 1667 030a 1048     		ldr	r0, .L81
 1668 030c FFF7FEFF 		bl	GPIO_SetBits
 252:Src/main.c    ****                 send_sms("da tat den phong ngu");
 1669              		.loc 1 252 17
 1670 0310 1A48     		ldr	r0, .L81+48
 1671 0312 FFF7FEFF 		bl	send_sms
 1672              	.L67:
 253:Src/main.c    ****                 }
 254:Src/main.c    ****             }
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 36


 255:Src/main.c    ****             ptr = strstr(buffer, "Khach1");      
 1673              		.loc 1 255 19
 1674 0316 1A49     		ldr	r1, .L81+52
 1675 0318 1448     		ldr	r0, .L81+32
 1676 031a FFF7FEFF 		bl	strstr
 1677 031e 0346     		mov	r3, r0
 1678              		.loc 1 255 17
 1679 0320 134A     		ldr	r2, .L81+36
 1680 0322 1360     		str	r3, [r2]
 256:Src/main.c    ****             if(strncmp(ptr, "Khach1", 4)==0){    
 1681              		.loc 1 256 16
 1682 0324 124B     		ldr	r3, .L81+36
 1683 0326 1B68     		ldr	r3, [r3]
 1684 0328 0422     		movs	r2, #4
 1685 032a 1549     		ldr	r1, .L81+52
 1686 032c 1846     		mov	r0, r3
 1687 032e FFF7FEFF 		bl	strncmp
 1688 0332 0346     		mov	r3, r0
 1689              		.loc 1 256 15
 1690 0334 002B     		cmp	r3, #0
 1691 0336 27D1     		bne	.L68
 257:Src/main.c    ****                 GPIO_SetBits(GPIOA, GPIO_Pin_8);              
 1692              		.loc 1 257 17
 1693 0338 4FF48071 		mov	r1, #256
 1694 033c 0448     		ldr	r0, .L81+4
 1695 033e FFF7FEFF 		bl	GPIO_SetBits
 258:Src/main.c    ****                 send_sms("da bat den phong khach");
 1696              		.loc 1 258 17
 1697 0342 1048     		ldr	r0, .L81+56
 1698 0344 FFF7FEFF 		bl	send_sms
 1699 0348 37E0     		b	.L69
 1700              	.L82:
 1701 034a 00BF     		.align	2
 1702              	.L81:
 1703 034c 00100140 		.word	1073811456
 1704 0350 00080140 		.word	1073809408
 1705 0354 00440040 		.word	1073759232
 1706 0358 00240140 		.word	1073816576
 1707 035c 67666666 		.word	1717986919
 1708 0360 00000000 		.word	new_sms
 1709 0364 A4000000 		.word	.LC11
 1710 0368 B0000000 		.word	.LC12
 1711 036c 00000000 		.word	buffer
 1712 0370 00000000 		.word	ptr
 1713 0374 B8000000 		.word	.LC13
 1714 0378 D0000000 		.word	.LC14
 1715 037c D8000000 		.word	.LC15
 1716 0380 F0000000 		.word	.LC16
 1717 0384 F8000000 		.word	.LC17
 1718              	.L68:
 259:Src/main.c    ****             }else{
 260:Src/main.c    ****                 ptr = strstr(buffer, "Khach0");
 1719              		.loc 1 260 23
 1720 0388 6E49     		ldr	r1, .L83
 1721 038a 6F48     		ldr	r0, .L83+4
 1722 038c FFF7FEFF 		bl	strstr
 1723 0390 0346     		mov	r3, r0
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 37


 1724              		.loc 1 260 21
 1725 0392 6E4A     		ldr	r2, .L83+8
 1726 0394 1360     		str	r3, [r2]
 261:Src/main.c    ****                 if(strncmp(ptr, "Khach0", 4)==0){      
 1727              		.loc 1 261 20
 1728 0396 6D4B     		ldr	r3, .L83+8
 1729 0398 1B68     		ldr	r3, [r3]
 1730 039a 0422     		movs	r2, #4
 1731 039c 6949     		ldr	r1, .L83
 1732 039e 1846     		mov	r0, r3
 1733 03a0 FFF7FEFF 		bl	strncmp
 1734 03a4 0346     		mov	r3, r0
 1735              		.loc 1 261 19
 1736 03a6 002B     		cmp	r3, #0
 1737 03a8 07D1     		bne	.L69
 262:Src/main.c    ****                 GPIO_ResetBits(GPIOA, GPIO_Pin_8);
 1738              		.loc 1 262 17
 1739 03aa 4FF48071 		mov	r1, #256
 1740 03ae 6848     		ldr	r0, .L83+12
 1741 03b0 FFF7FEFF 		bl	GPIO_ResetBits
 263:Src/main.c    ****                 send_sms("da tat den phong khach");
 1742              		.loc 1 263 17
 1743 03b4 6748     		ldr	r0, .L83+16
 1744 03b6 FFF7FEFF 		bl	send_sms
 1745              	.L69:
 264:Src/main.c    ****                 }
 265:Src/main.c    ****             }
 266:Src/main.c    ****             ptr = strstr(buffer, "Bep1");          
 1746              		.loc 1 266 19
 1747 03ba 6749     		ldr	r1, .L83+20
 1748 03bc 6248     		ldr	r0, .L83+4
 1749 03be FFF7FEFF 		bl	strstr
 1750 03c2 0346     		mov	r3, r0
 1751              		.loc 1 266 17
 1752 03c4 614A     		ldr	r2, .L83+8
 1753 03c6 1360     		str	r3, [r2]
 267:Src/main.c    ****             if(strncmp(ptr, "Bep1", 4)==0){      
 1754              		.loc 1 267 16
 1755 03c8 604B     		ldr	r3, .L83+8
 1756 03ca 1B68     		ldr	r3, [r3]
 1757 03cc 0422     		movs	r2, #4
 1758 03ce 6249     		ldr	r1, .L83+20
 1759 03d0 1846     		mov	r0, r3
 1760 03d2 FFF7FEFF 		bl	strncmp
 1761 03d6 0346     		mov	r3, r0
 1762              		.loc 1 267 15
 1763 03d8 002B     		cmp	r3, #0
 1764 03da 08D1     		bne	.L70
 268:Src/main.c    ****                 GPIO_SetBits(GPIOA, GPIO_Pin_9);                
 1765              		.loc 1 268 17
 1766 03dc 4FF40071 		mov	r1, #512
 1767 03e0 5B48     		ldr	r0, .L83+12
 1768 03e2 FFF7FEFF 		bl	GPIO_SetBits
 269:Src/main.c    ****                 send_sms("da bat den phong bep");
 1769              		.loc 1 269 17
 1770 03e6 5D48     		ldr	r0, .L83+24
 1771 03e8 FFF7FEFF 		bl	send_sms
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 38


 1772 03ec 18E0     		b	.L71
 1773              	.L70:
 270:Src/main.c    ****             }else{
 271:Src/main.c    ****                 ptr = strstr(buffer, "Bep0");
 1774              		.loc 1 271 23
 1775 03ee 5C49     		ldr	r1, .L83+28
 1776 03f0 5548     		ldr	r0, .L83+4
 1777 03f2 FFF7FEFF 		bl	strstr
 1778 03f6 0346     		mov	r3, r0
 1779              		.loc 1 271 21
 1780 03f8 544A     		ldr	r2, .L83+8
 1781 03fa 1360     		str	r3, [r2]
 272:Src/main.c    ****                 if(strncmp(ptr, "Bep0", 4)==0){      
 1782              		.loc 1 272 20
 1783 03fc 534B     		ldr	r3, .L83+8
 1784 03fe 1B68     		ldr	r3, [r3]
 1785 0400 0422     		movs	r2, #4
 1786 0402 5749     		ldr	r1, .L83+28
 1787 0404 1846     		mov	r0, r3
 1788 0406 FFF7FEFF 		bl	strncmp
 1789 040a 0346     		mov	r3, r0
 1790              		.loc 1 272 19
 1791 040c 002B     		cmp	r3, #0
 1792 040e 07D1     		bne	.L71
 273:Src/main.c    ****                 GPIO_ResetBits(GPIOA, GPIO_Pin_9);
 1793              		.loc 1 273 17
 1794 0410 4FF40071 		mov	r1, #512
 1795 0414 4E48     		ldr	r0, .L83+12
 1796 0416 FFF7FEFF 		bl	GPIO_ResetBits
 274:Src/main.c    ****                 send_sms("da tat den phong bep");
 1797              		.loc 1 274 17
 1798 041a 5248     		ldr	r0, .L83+32
 1799 041c FFF7FEFF 		bl	send_sms
 1800              	.L71:
 275:Src/main.c    ****                 }
 276:Src/main.c    ****             }
 277:Src/main.c    ****             ptr = strstr(buffer, "info");         // check celsius
 1801              		.loc 1 277 19
 1802 0420 5149     		ldr	r1, .L83+36
 1803 0422 4948     		ldr	r0, .L83+4
 1804 0424 FFF7FEFF 		bl	strstr
 1805 0428 0346     		mov	r3, r0
 1806              		.loc 1 277 17
 1807 042a 484A     		ldr	r2, .L83+8
 1808 042c 1360     		str	r3, [r2]
 278:Src/main.c    ****             if(strncmp(ptr, "info", 4)==0){       // compare string
 1809              		.loc 1 278 16
 1810 042e 474B     		ldr	r3, .L83+8
 1811 0430 1B68     		ldr	r3, [r3]
 1812 0432 0422     		movs	r2, #4
 1813 0434 4C49     		ldr	r1, .L83+36
 1814 0436 1846     		mov	r0, r3
 1815 0438 FFF7FEFF 		bl	strncmp
 1816 043c 0346     		mov	r3, r0
 1817              		.loc 1 278 15
 1818 043e 002B     		cmp	r3, #0
 1819 0440 6CD1     		bne	.L72
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 39


 1820              	.LBB4:
 279:Src/main.c    ****                 unsigned char a[20];  
 280:Src/main.c    ****                             
 281:Src/main.c    ****                 ftos(adc_tb, a, 2);        // float to string, number 2 is the amount of index afte
 1821              		.loc 1 281 17
 1822 0442 3B1D     		adds	r3, r7, #4
 1823 0444 0222     		movs	r2, #2
 1824 0446 1946     		mov	r1, r3
 1825 0448 386D     		ldr	r0, [r7, #80]	@ float
 1826 044a FFF7FEFF 		bl	ftos
 282:Src/main.c    ****                 
 283:Src/main.c    ****                 //-----------------
 284:Src/main.c    ****                 UART_Write_Text("AT+CMGS=\"+84334610035\"\r\n");
 1827              		.loc 1 284 17
 1828 044e 4748     		ldr	r0, .L83+40
 1829 0450 FFF7FEFF 		bl	UART_Write_Text
 285:Src/main.c    ****                 delayms(500);
 1830              		.loc 1 285 17
 1831 0454 4FF4FA70 		mov	r0, #500
 1832 0458 FFF7FEFF 		bl	delayms
 286:Src/main.c    ****                 if(GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_9) == 1) UART_Write_Text("den phong bep da
 1833              		.loc 1 286 20
 1834 045c 4FF40071 		mov	r1, #512
 1835 0460 3B48     		ldr	r0, .L83+12
 1836 0462 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 1837 0466 0346     		mov	r3, r0
 1838              		.loc 1 286 19
 1839 0468 012B     		cmp	r3, #1
 1840 046a 02D1     		bne	.L73
 1841              		.loc 1 286 67 discriminator 1
 1842 046c 4048     		ldr	r0, .L83+44
 1843 046e FFF7FEFF 		bl	UART_Write_Text
 1844              	.L73:
 287:Src/main.c    ****                 if(GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_9) == 0)  UART_Write_Text("den phong bep d
 1845              		.loc 1 287 20
 1846 0472 4FF40071 		mov	r1, #512
 1847 0476 3648     		ldr	r0, .L83+12
 1848 0478 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 1849 047c 0346     		mov	r3, r0
 1850              		.loc 1 287 19
 1851 047e 002B     		cmp	r3, #0
 1852 0480 02D1     		bne	.L74
 1853              		.loc 1 287 68 discriminator 1
 1854 0482 3C48     		ldr	r0, .L83+48
 1855 0484 FFF7FEFF 		bl	UART_Write_Text
 1856              	.L74:
 288:Src/main.c    ****                 if(GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_8) == 1) UART_Write_Text("den phong khach 
 1857              		.loc 1 288 20
 1858 0488 4FF48071 		mov	r1, #256
 1859 048c 3048     		ldr	r0, .L83+12
 1860 048e FFF7FEFF 		bl	GPIO_ReadInputDataBit
 1861 0492 0346     		mov	r3, r0
 1862              		.loc 1 288 19
 1863 0494 012B     		cmp	r3, #1
 1864 0496 02D1     		bne	.L75
 1865              		.loc 1 288 67 discriminator 1
 1866 0498 3748     		ldr	r0, .L83+52
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 40


 1867 049a FFF7FEFF 		bl	UART_Write_Text
 1868              	.L75:
 289:Src/main.c    ****                 if(GPIO_ReadInputDataBit(GPIOA, GPIO_Pin_8) == 0)  UART_Write_Text("den phong khach
 1869              		.loc 1 289 20
 1870 049e 4FF48071 		mov	r1, #256
 1871 04a2 2B48     		ldr	r0, .L83+12
 1872 04a4 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 1873 04a8 0346     		mov	r3, r0
 1874              		.loc 1 289 19
 1875 04aa 002B     		cmp	r3, #0
 1876 04ac 02D1     		bne	.L76
 1877              		.loc 1 289 68 discriminator 1
 1878 04ae 3348     		ldr	r0, .L83+56
 1879 04b0 FFF7FEFF 		bl	UART_Write_Text
 1880              	.L76:
 290:Src/main.c    ****                 if(GPIO_ReadInputDataBit(GPIOC, GPIO_Pin_13) == 0) UART_Write_Text("den phong ngu d
 1881              		.loc 1 290 20
 1882 04b4 4FF40051 		mov	r1, #8192
 1883 04b8 3148     		ldr	r0, .L83+60
 1884 04ba FFF7FEFF 		bl	GPIO_ReadInputDataBit
 1885 04be 0346     		mov	r3, r0
 1886              		.loc 1 290 19
 1887 04c0 002B     		cmp	r3, #0
 1888 04c2 02D1     		bne	.L77
 1889              		.loc 1 290 68 discriminator 1
 1890 04c4 2F48     		ldr	r0, .L83+64
 1891 04c6 FFF7FEFF 		bl	UART_Write_Text
 1892              	.L77:
 291:Src/main.c    ****                 if(GPIO_ReadInputDataBit(GPIOC, GPIO_Pin_13) == 1)  UART_Write_Text("den phong ngu 
 1893              		.loc 1 291 20
 1894 04ca 4FF40051 		mov	r1, #8192
 1895 04ce 2C48     		ldr	r0, .L83+60
 1896 04d0 FFF7FEFF 		bl	GPIO_ReadInputDataBit
 1897 04d4 0346     		mov	r3, r0
 1898              		.loc 1 291 19
 1899 04d6 012B     		cmp	r3, #1
 1900 04d8 02D1     		bne	.L78
 1901              		.loc 1 291 69 discriminator 1
 1902 04da 2B48     		ldr	r0, .L83+68
 1903 04dc FFF7FEFF 		bl	UART_Write_Text
 1904              	.L78:
 292:Src/main.c    ****                 
 293:Src/main.c    ****                 UART_Write_Text("nhiet do phong la: ");
 1905              		.loc 1 293 17
 1906 04e0 2A48     		ldr	r0, .L83+72
 1907 04e2 FFF7FEFF 		bl	UART_Write_Text
 294:Src/main.c    ****                 UART_Write_Text(a);
 1908              		.loc 1 294 17
 1909 04e6 3B1D     		adds	r3, r7, #4
 1910 04e8 1846     		mov	r0, r3
 1911 04ea FFF7FEFF 		bl	UART_Write_Text
 295:Src/main.c    ****                 UART_Write_Text("\n\r");
 1912              		.loc 1 295 17
 1913 04ee 2848     		ldr	r0, .L83+76
 1914 04f0 FFF7FEFF 		bl	UART_Write_Text
 296:Src/main.c    ****                 delayms(500);
 1915              		.loc 1 296 17
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 41


 1916 04f4 4FF4FA70 		mov	r0, #500
 1917 04f8 FFF7FEFF 		bl	delayms
 297:Src/main.c    ****                 USART_SendData(USART2, 0x1A);           // gui du lieu
 1918              		.loc 1 297 17
 1919 04fc 1A21     		movs	r1, #26
 1920 04fe 2548     		ldr	r0, .L83+80
 1921 0500 FFF7FEFF 		bl	USART_SendData
 298:Src/main.c    ****                 while(USART_GetFlagStatus(USART2, USART_FLAG_TXE) == RESET){        //neu ko gui dc
 1922              		.loc 1 298 22
 1923 0504 00BF     		nop
 1924              	.L79:
 1925              		.loc 1 298 23 discriminator 1
 1926 0506 8021     		movs	r1, #128
 1927 0508 2248     		ldr	r0, .L83+80
 1928 050a FFF7FEFF 		bl	USART_GetFlagStatus
 1929 050e 0346     		mov	r3, r0
 1930              		.loc 1 298 22 discriminator 1
 1931 0510 002B     		cmp	r3, #0
 1932 0512 F8D0     		beq	.L79
 299:Src/main.c    ****                 }       // '26' character(terminator character)
 300:Src/main.c    ****                 delayms(1000);
 1933              		.loc 1 300 17
 1934 0514 4FF47A70 		mov	r0, #1000
 1935 0518 FFF7FEFF 		bl	delayms
 1936              	.L72:
 1937              	.LBE4:
 301:Src/main.c    ****                 //------------------
 302:Src/main.c    ****             }
 303:Src/main.c    ****             clear_buffer();
 1938              		.loc 1 303 13
 1939 051c FFF7FEFF 		bl	clear_buffer
 304:Src/main.c    ****             delete_sms();
 1940              		.loc 1 304 13
 1941 0520 FFF7FEFF 		bl	delete_sms
 305:Src/main.c    ****             rev = 0;
 1942              		.loc 1 305 17
 1943 0524 1C4B     		ldr	r3, .L83+84
 1944 0526 0022     		movs	r2, #0
 1945 0528 1A70     		strb	r2, [r3]
 306:Src/main.c    ****             rev1 = 0;
 1946              		.loc 1 306 18
 1947 052a 1C4B     		ldr	r3, .L83+88
 1948 052c 0022     		movs	r2, #0
 1949 052e 1A70     		strb	r2, [r3]
 307:Src/main.c    ****             rev2 = 0;
 1950              		.loc 1 307 18
 1951 0530 1B4B     		ldr	r3, .L83+92
 1952 0532 0022     		movs	r2, #0
 1953 0534 1A70     		strb	r2, [r3]
 308:Src/main.c    ****             rev3 = 0;
 1954              		.loc 1 308 18
 1955 0536 1B4B     		ldr	r3, .L83+96
 1956 0538 0022     		movs	r2, #0
 1957 053a 1A70     		strb	r2, [r3]
 309:Src/main.c    ****             rev4 = 0;
 1958              		.loc 1 309 18
 1959 053c 1A4B     		ldr	r3, .L83+100
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 42


 1960 053e 0022     		movs	r2, #0
 1961 0540 1A70     		strb	r2, [r3]
 1962              	.LBE2:
 227:Src/main.c    ****         int sum_adc1 = 0;
 1963              		.loc 1 227 13
 1964 0542 6BE6     		b	.L80
 1965              	.L84:
 1966              		.align	2
 1967              	.L83:
 1968 0544 10010000 		.word	.LC18
 1969 0548 00000000 		.word	buffer
 1970 054c 00000000 		.word	ptr
 1971 0550 00080140 		.word	1073809408
 1972 0554 18010000 		.word	.LC19
 1973 0558 30010000 		.word	.LC20
 1974 055c 38010000 		.word	.LC21
 1975 0560 50010000 		.word	.LC22
 1976 0564 58010000 		.word	.LC23
 1977 0568 70010000 		.word	.LC24
 1978 056c 00000000 		.word	.LC0
 1979 0570 78010000 		.word	.LC25
 1980 0574 94010000 		.word	.LC26
 1981 0578 B0010000 		.word	.LC27
 1982 057c CC010000 		.word	.LC28
 1983 0580 00100140 		.word	1073811456
 1984 0584 E8010000 		.word	.LC29
 1985 0588 04020000 		.word	.LC30
 1986 058c 20020000 		.word	.LC31
 1987 0590 1C000000 		.word	.LC1
 1988 0594 00440040 		.word	1073759232
 1989 0598 00000000 		.word	rev
 1990 059c 00000000 		.word	rev1
 1991 05a0 00000000 		.word	rev2
 1992 05a4 00000000 		.word	rev3
 1993 05a8 00000000 		.word	rev4
 1994              		.cfi_endproc
 1995              	.LFE79:
 1997              		.text
 1998              	.Letext0:
 1999              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2000              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\inc
 2001              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2002              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f10x.h"
 2003              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f10x.h"
 2004              		.file 7 "Drivers/STM32F10x_StdPeriph_Driver/inc/stm32f10x_adc.h"
 2005              		.file 8 "Drivers/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 2006              		.file 9 "Drivers/STM32F10x_StdPeriph_Driver/inc/stm32f10x_tim.h"
 2007              		.file 10 "Drivers/STM32F10x_StdPeriph_Driver/inc/stm32f10x_usart.h"
 2008              		.file 11 "Drivers/STM32F10x_StdPeriph_Driver/inc/misc.h"
 2009              		.file 12 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\lib\\gcc\\arm-non
 2010              		.file 13 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 2011              		.file 14 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
 2012              		.file 15 "c:\\program files (x86)\\gnu arm embedded toolchain\\9 2020-q2-update\\arm-none-eabi\\in
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:16     .text.delay1ms:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:24     .text.delay1ms:00000000 delay1ms
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:61     .text.delayus:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:68     .text.delayus:00000000 delayus
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:117    .text.delayms:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:124    .text.delayms:00000000 delayms
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:171    .text.UART_Write:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:178    .text.UART_Write:00000000 UART_Write
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:228    .text.UART_Write:00000030 $d
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:233    .text.UART_Write_Text:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:240    .text.UART_Write_Text:00000000 UART_Write_Text
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:300    .rodata:00000000 $d
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:307    .text.send_sms:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:314    .text.send_sms:00000000 send_sms
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:378    .text.send_sms:00000054 $d
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:410    .text.ATinit:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:417    .text.ATinit:00000000 ATinit
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:485    .text.ATinit:00000078 $d
                            *COM*:00000004 ptr
                            *COM*:00000001 i
                            *COM*:00000001 rev
                            *COM*:00000001 rev1
                            *COM*:00000001 rev2
                            *COM*:00000001 rev3
                            *COM*:00000001 rev4
                            *COM*:0000005a buffer
                            *COM*:00000001 xbuffer
                            *COM*:00000004 new_sms
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:507    .text.USART2_IRQHandler:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:514    .text.USART2_IRQHandler:00000000 USART2_IRQHandler
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:651    .text.USART2_IRQHandler:000000b0 $d
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:664    .text.clear_buffer:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:671    .text.clear_buffer:00000000 clear_buffer
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:729    .text.clear_buffer:00000038 $d
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:739    .text.delete_sms:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:746    .text.delete_sms:00000000 delete_sms
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:772    .text.delete_sms:00000018 $d
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:777    .text.reverse:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:784    .text.reverse:00000000 reverse
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:873    .text.intToStr:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:880    .text.intToStr:00000000 intToStr
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:992    .text.intToStr:0000008c $d
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:997    .text.mypow:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:1004   .text.mypow:00000000 mypow
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:1071   .text.ftos:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:1078   .text.ftos:00000000 ftos
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:1242   .text.main:00000000 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:1249   .text.main:00000000 main
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:1703   .text.main:0000034c $d
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:1720   .text.main:00000388 $t
C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s:1968   .text.main:00000544 $d

UNDEFINED SYMBOLS
TIM_SetCounter
TIM_GetCounter
ARM GAS  C:\Users\mcho9\AppData\Local\Temp\ccYkwHYZ.s 			page 44


USART_SendData
USART_GetFlagStatus
USART_GetITStatus
__aeabi_f2iz
__aeabi_i2f
__aeabi_fsub
__aeabi_fmul
RCC_APB1PeriphClockCmd
TIM_TimeBaseInit
TIM_Cmd
RCC_APB2PeriphClockCmd
GPIO_Init
GPIO_SetBits
GPIO_ResetBits
USART_Init
USART_Cmd
USART_ITConfig
NVIC_Init
ADC_Init
ADC_RegularChannelConfig
ADC_Cmd
ADC_TempSensorVrefintCmd
ADC_ResetCalibration
ADC_GetResetCalibrationStatus
ADC_StartCalibration
ADC_GetCalibrationStatus
ADC_SoftwareStartConvCmd
ADC_GetConversionValue
GPIO_ReadInputDataBit
strstr
strncmp
